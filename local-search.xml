<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>資料整理</title>
    <link href="/2021/12/16/%E8%B3%87%E6%96%99%E6%95%B4%E7%90%86/"/>
    <url>/2021/12/16/%E8%B3%87%E6%96%99%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="JSON資料整理"><a href="#JSON資料整理" class="headerlink" title="JSON資料整理"></a><font color=#FF6600>JSON資料整理</font></h1><p>這次工作到一段落，有時間喘口氣</p><p>學長出了一個新的題目給我們</p><p>題目：資料是一筆商品配送訂單，會有相對應的配送平台</p><p>如果今天平台沒開或是故障、錯誤等等，會回傳一個訊息</p><p>當收到訊息時觸發這個函式，將這個平台的配送時間變為0，下一家的時間直接遞補上來</p><p>其中，第一家平台會算到下一分鐘的整點時間，所以要做相對應的調整<br>(12點0分12秒→12點1分0秒開始計算)</p><p>格式中，type不影響，store為配送平台，start_time為開始時間，end_time為結束時間，expire_minute為等待分鐘</p><p><font color=#800080>來源資料是json格式</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$order_dispatcher</span>=<span class="hljs-string">&#x27;[&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;5&quot;,&quot;start_time&quot;:1639554623,&quot;end_time&quot;:1639554719,&quot;expire_minute&quot;:&quot;1&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;6&quot;,&quot;start_time&quot;:1639554720,&quot;end_time&quot;:1639554899,&quot;expire_minute&quot;:&quot;3&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;2&quot;,&quot;start_time&quot;:1639554900,&quot;end_time&quot;:1639555079,&quot;expire_minute&quot;:&quot;3&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;1&quot;,&quot;start_time&quot;:1639555080,&quot;end_time&quot;:1639555679,&quot;expire_minute&quot;:&quot;10&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;3&quot;,&quot;start_time&quot;:1639555680,&quot;end_time&quot;:1639555979,&quot;expire_minute&quot;:&quot;5&quot;,&quot;is_after&quot;:1&#125;]&#x27;</span>;<br></code></pre></td></tr></table></figure><p><font color=#800080>輸出</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$result</span>=<span class="hljs-string">&#x27;[&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;5&quot;,&quot;start_time&quot;:1639554623,&quot;end_time&quot;:1639554719,&quot;expire_minute&quot;:&quot;1&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;6&quot;,&quot;start_time&quot;:1639554720,&quot;end_time&quot;:1639554899,&quot;expire_minute&quot;:&quot;3&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;2&quot;,&quot;start_time&quot;:0,&quot;end_time&quot;:0,&quot;expire_minute&quot;:&quot;3&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;1&quot;,&quot;start_time&quot;:1639554900,&quot;end_time&quot;:1639555259,&quot;expire_minute&quot;:&quot;10&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;3&quot;,&quot;start_time&quot;:1639555260,&quot;end_time&quot;:1639555559,&quot;expire_minute&quot;:&quot;5&quot;,&quot;is_after&quot;:1&#125;]&#x27;</span>;<br></code></pre></td></tr></table></figure><p>其中沒有發現is_after標籤來判斷最後一個</p><p>所以用count去算，針對第一個或最後一個還要做特定的判斷</p><p><a href="http://sandbox.onlinephpfunctions.com/code/9bbac3fd1d51ee99cc4d56ebf2f191241db4d8bc">我的解答</a>請各位小力鞭….如果有更好的做法也歡迎提供給我互相進步  (๑•́ ₃ •̀๑)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logAlert</span>(<span class="hljs-params"><span class="hljs-variable">$el</span></span>)</span>&#123;<br><span class="hljs-variable">$order_dispatcher</span>=<span class="hljs-string">&#x27;[&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;5&quot;,&quot;start_time&quot;:1639554623,&quot;end_time&quot;:1639554719,&quot;expire_minute&quot;:&quot;1&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;6&quot;,&quot;start_time&quot;:1639554720,&quot;end_time&quot;:1639554899,&quot;expire_minute&quot;:&quot;3&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;2&quot;,&quot;start_time&quot;:1639554900,&quot;end_time&quot;:1639555079,&quot;expire_minute&quot;:&quot;3&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;1&quot;,&quot;start_time&quot;:1639555080,&quot;end_time&quot;:1639555679,&quot;expire_minute&quot;:&quot;10&quot;&#125;,</span><br><span class="hljs-string">&#123;&quot;type&quot;:1,&quot;store&quot;:&quot;3&quot;,&quot;start_time&quot;:1639555680,&quot;end_time&quot;:1639555979,&quot;expire_minute&quot;:&quot;5&quot;,&quot;is_after&quot;:1&#125;]&#x27;</span>;<br><br><span class="hljs-variable">$order_dispatcher</span>=json_decode(<span class="hljs-variable">$order_dispatcher</span>,<span class="hljs-literal">TRUE</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$order_dispatcher</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$result</span>)<br>&#123;<br>    <span class="hljs-variable">$startTime</span>=<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;start_time&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$startTime</span>%<span class="hljs-number">60</span> != <span class="hljs-number">0</span>)   <span class="hljs-comment">//   處理第一筆時間歸為整數計算</span><br>    &#123;<br>        <span class="hljs-variable">$startIntergerTime</span> = <span class="hljs-variable">$startTime</span>+(<span class="hljs-number">60</span>-(<span class="hljs-variable">$startTime</span>%<span class="hljs-number">60</span>));<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;store&#x27;</span>]==<span class="hljs-variable">$el</span>)<br>    &#123;<br>        <span class="hljs-variable">$keyChange</span>=<span class="hljs-variable">$key</span>+<span class="hljs-number">1</span>;<br>        <span class="hljs-variable">$startChange</span>=<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;start_time&#x27;</span>];<br>        <span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;start_time&#x27;</span>]=<span class="hljs-number">0</span>;<br>        <span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;end_time&#x27;</span>]=<span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$keyChange</span>))    <span class="hljs-comment">// 被改變後才開始處理</span><br>    &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$key</span>==<span class="hljs-variable">$keyChange</span>)&#123;<br>            <span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;start_time&#x27;</span>]=<span class="hljs-variable">$startChange</span>;<br>            <span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;end_time&#x27;</span>]=<span class="hljs-variable">$startIntergerTime</span>+(<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;expire_minute&#x27;</span>]*<span class="hljs-number">60</span>)-<span class="hljs-number">1</span>;<br>        &#125;<br>        <br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$key</span>&gt;<span class="hljs-variable">$keyChange</span>)&#123;<br>            <span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;start_time&#x27;</span>]=<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>-<span class="hljs-number">1</span>][<span class="hljs-string">&#x27;end_time&#x27;</span>]+<span class="hljs-number">1</span>;<br>            <span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;end_time&#x27;</span>]=<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;start_time&#x27;</span>]-<span class="hljs-number">1</span>+(<span class="hljs-variable">$order_dispatcher</span>[<span class="hljs-variable">$key</span>][<span class="hljs-string">&#x27;expire_minute&#x27;</span>]*<span class="hljs-number">60</span>);<br>        &#125;<br>    &#125;<br>&#125;<br>print_r(json_encode(<span class="hljs-variable">$order_dispatcher</span>));<br>&#125;<br>logAlert(<span class="hljs-variable">$input</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>疑難雜症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>疑難雜症</tag>
      
      <tag>多重陣列</tag>
      
      <tag>傳址</tag>
      
      <tag>多重</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多層分類</title>
    <link href="/2021/12/08/%E5%A4%9A%E5%B1%A4%E5%88%86%E9%A1%9E/"/>
    <url>/2021/12/08/%E5%A4%9A%E5%B1%A4%E5%88%86%E9%A1%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="多重分類-關聯資料表"><a href="#多重分類-關聯資料表" class="headerlink" title="多重分類(關聯資料表)"></a><font color=#FF6600>多重分類(關聯資料表)</font></h1><p>A、B、C、D、E五個資料表<br>專案需求要我們呈現<br>A→多B  //  B→A<br>B→多C  //  C→B<br>C→多D  //  D→C<br>D→多E  //  E→D</p><p>他們子代都是複數，而父級都只會有一個</p><p>並且資料類型不同，B是兩個資料表的關聯(沒有ID)、C欄位跟DE的欄位名稱不同(不能使用同種函式判斷)</p><p>會很需要考驗到自己邏輯</p><h3 id="介面"><a href="#介面" class="headerlink" title="介面"></a><font color=#FFD700>介面</font></h3><p><img src="/img/2021-12-15142513.png"></p><p>基本上就是同一個模子上面帶路徑(A)、(A&gt;B)、(A&gt;B&gt;C)…</p><p>一般常見的方法看你目前人的位置在哪</p><p>所以也就是帶不同資料表進來，然後把除了路徑和關鍵字改一改(新增a的資料、新增b的資料…)</p><p>比較麻煩的是上面的路徑帶了名字跟超連結，所以必須要在底下的層級紀錄那一層的狀態</p><p>有想過用Session跟cookie去製作，但laravel如何銜接這兩個我還不太會…</p><p><del>最後就是紀錄id了，這樣D要跳回A、E要跳回B都會比較方便</del></p><p>因為每張資料表的獨特性也不一定有id，所以變成每到下面一層就要多帶一點東西給他，讓他知道該跳回的頁面</p><p>當初嘗試用id解決問題，發現E跳到C可以，但E跳D在跳C就不行了(id錯誤)</p><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a><font color=#FFD700>新增</font></h3><p>新增功能並不困難，找到對應的資料表去增加就好</p><p>將資料表名稱跟新增內容帶過去，只是欄位名稱不同的關係讓後面寫得有些髒</p><p>案子的功能用ajax新增欄位用ajax丟然後接回應跳出提醒視窗(自己寫的不是alret)</p><p>其中有一個有趣的功能</p><h5 id="動態改變名稱"><a href="#動態改變名稱" class="headerlink" title="動態改變名稱"></a><font color=#008000>動態改變名稱</font></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    $(<span class="hljs-string">&#x27;input[name=&quot;name&quot;]&#x27;</span>).change(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">let</span> id = $(<span class="hljs-built_in">this</span>).parent().siblings(<span class="hljs-string">&#x27;td&#x27;</span>).eq(<span class="hljs-number">1</span>).html();<br>        <span class="hljs-keyword">let</span> name = $(<span class="hljs-built_in">this</span>).val();<br>        $.post(<span class="hljs-string">&#x27;/Store/updateCategory&#x27;</span>, &#123;<br>            <span class="hljs-attr">mod</span>: <span class="hljs-string">&#x27;&#123;&#123;$mod&#125;&#125;&#x27;</span> ,<br>            <span class="hljs-attr">id</span>: id,<br>            <span class="hljs-attr">name</span>: name<br>        &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>            <span class="hljs-built_in">console</span>.log(msg);<br>        &#125;);<br>    &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">saveCategoryName</span>(<span class="hljs-params">Request <span class="hljs-variable">$request</span>, StoreService <span class="hljs-variable">$service</span></span>) </span>&#123; <br><br>  <span class="hljs-variable">$table</span> = request(<span class="hljs-string">&#x27;table&#x27;</span>);<br>  <span class="hljs-variable">$ids</span> = request(<span class="hljs-string">&#x27;id&#x27;</span>);<br>  <span class="hljs-variable">$name</span> = request(<span class="hljs-string">&#x27;name&#x27;</span>);<br><br>  <span class="hljs-keyword">if</span>(!<span class="hljs-variable">$ids</span>)&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;apiFail(<span class="hljs-string">&#x27;請選擇操作的數據&#x27;</span>);<br>  &#125;<br><br>  <span class="hljs-variable">$success</span>=DB::table(<span class="hljs-variable">$table</span>)-&gt;where(<span class="hljs-string">&#x27;id&#x27;</span>,<span class="hljs-variable">$ids</span>)-&gt;update([<span class="hljs-string">&#x27;name&#x27;</span>=&gt;<span class="hljs-variable">$name</span>]);<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-variable">$success</span>)<br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;apiFail(<span class="hljs-string">&#x27;修改失敗&#x27;</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;apiSuccess(<span class="hljs-string">&#x27;修改成功&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>這樣使input:onchange的時候可以觸發function，將之料丟到後台直接修改。</p><p><code>$(function()&#123;&#125;)</code>的用意是<code>document.ready</code></p><p><code>/Store/updateCategory</code>的連結就是laravel route裡面寫去執行<code>saveCategoryName()</code>這個函式</p><p>其中還有一個</p><h5 id="Cropper圖片上傳功能"><a href="#Cropper圖片上傳功能" class="headerlink" title="Cropper圖片上傳功能"></a><font color=#008000>Cropper圖片上傳功能</font></h5><p>Cropper圖片上傳後可以在編輯圖片大小等等(透過css給他灰階讓他有範圍)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//列表資料圖片處理</span><br><span class="hljs-keyword">var</span> useCropper = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <br>    <span class="hljs-keyword">var</span> crop = [];<br>    $(<span class="hljs-string">&quot;div[attr-control=&#x27;crop&#x27;]&quot;</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> id = $(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&quot;attr-id&quot;</span>);<br>        crop[i] = <span class="hljs-keyword">new</span> Croppic(<span class="hljs-string">&#x27;divPreview_&#x27;</span> + id, &#123;<br>            <span class="hljs-attr">customUploadButtonId</span>: <span class="hljs-string">&#x27;upload_btn_file_&#x27;</span> + id,<br>            <span class="hljs-attr">cropUrl</span>: <span class="hljs-string">&#x27;&#123;&#123; build_action(&#x27;</span>Admin\StoreController@postImgToCrop<span class="hljs-string">&#x27;) &#125;&#125;&#x27;</span>,<br>            <span class="hljs-attr">modal</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">doubleZoomControls</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">onBeforeImgUpload</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-comment">//                        $(&#x27;#divPreview&#x27;).css(&#x27;display&#x27;, &#x27;block&#x27;);</span><br>                <span class="hljs-comment">//                        $(&#x27;.upload-pre-item-mid&#x27;).css(&#x27;display&#x27;, &#x27;none&#x27;);</span><br>            &#125;,<br>            <span class="hljs-attr">onAfterImgCrop</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">store</span>) </span>&#123;<br>                <span class="hljs-built_in">console</span>.log(store);<br>                <span class="hljs-keyword">if</span> (store.status != <span class="hljs-string">&#x27;success&#x27;</span>) &#123;<br>                    updateAlert(<span class="hljs-string">&#x27;網絡發生錯誤，請重試&#x27;</span>);<br>                    cropper.reset();<br>                &#125;<br>                $(<span class="hljs-string">&#x27;#image_&#x27;</span> + id).val(store.key);<br>                $(<span class="hljs-string">&#x27;#imgHeadPhoto_&#x27;</span> + id).prop(<span class="hljs-string">&#x27;src&#x27;</span>, store.url);<br>            &#125;,<br>            <span class="hljs-attr">onError</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;error&#x27;</span>);<br>            &#125;,<br>            <span class="hljs-attr">processInline</span>: <span class="hljs-literal">true</span>,<br>        &#125;);<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>其實這段最後是學長完成的code，因為必須取出id的關係，但上面html又是用foreach產生出來的欄位</p><p>其中讓<code>cropper1</code>、<code>cropper2</code>這種唯一值變成陣列<code>crop[i]</code>的方式有獨特名字就讓我大開眼界</p><p>本來是用上面foreach帶key值在底下foreach產生，結果反而這樣寫比較直觀</p><p>而且each()也是比較方便的用法</p><h3 id="查詢"><a href="#查詢" class="headerlink" title="查詢"></a><font color=#FFD700>查詢</font></h3><p>查詢功能有一個針對關鍵字的jquery</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//搜索關鍵字功能</span><br>$(<span class="hljs-string">&quot;#search&quot;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> url = $(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;url&#x27;</span>);<br>    <span class="hljs-keyword">var</span> query = $(<span class="hljs-string">&#x27;.search-form&#x27;</span>).find(<span class="hljs-string">&#x27;input&#x27;</span>).serialize();<br>    query = query.replace(<span class="hljs-regexp">/(&amp;|^)(\w*?\d*?\-*?_*?)*?=?((?=&amp;)|(?=$))/g</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br>    query = query.replace(<span class="hljs-regexp">/^&amp;/g</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (url.indexOf(<span class="hljs-string">&#x27;?&#x27;</span>) &gt; <span class="hljs-number">0</span>) &#123;<br>        url += <span class="hljs-string">&#x27;&amp;&#x27;</span> + query;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        url += <span class="hljs-string">&#x27;?&#x27;</span> + query;<br>    &#125;<br>    url += <span class="hljs-string">&#x27;&amp;id=&#x27;</span> + <span class="hljs-string">&quot;&#123;&#123; $id &#125;&#125;&quot;</span> + <span class="hljs-string">&#x27;&amp;store_id=&#x27;</span> + <span class="hljs-string">&quot;&#123;&#123; $store_id &#125;&#125;&quot;</span> + <span class="hljs-string">&#x27;&amp;mod=&#x27;</span> + <span class="hljs-string">&quot;&#123;&#123; $mod &#125;&#125;&quot;</span>;<br>    <span class="hljs-built_in">window</span>.location.href = url;<br>&#125;);<br><span class="hljs-comment">//Enter按下去搜索</span><br>$(<span class="hljs-string">&quot;.search-input&quot;</span>).keyup(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (e.keyCode === <span class="hljs-number">13</span>) &#123;<br>        $(<span class="hljs-string">&quot;#search&quot;</span>).click();<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>在查詢視窗內如果點下ENTER會產生點擊效果</p><p>又因為點擊效果會有搜尋的動作產生查詢動作</p><p>可以明顯知道</p><h3 id="刪除"><a href="#刪除" class="headerlink" title="刪除"></a><font color=#FFD700>刪除</font></h3><p>因為多層分類的關係，需要不斷去判斷其他資料表有沒有仍在使用的資料</p><p>若資料仍在使用中(有關聯)，就必須跳出提醒不能刪除此資料</p><p>由於CDE是同個頁面，所以是關聯再一起使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">postCategoryDelete</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">  </span>&#123;<br>    <span class="hljs-variable">$model</span> = request(<span class="hljs-string">&#x27;mod&#x27;</span>);<br>    <span class="hljs-variable">$ids</span> = request(<span class="hljs-string">&#x27;id&#x27;</span>);<br><br>    <span class="hljs-comment">//錯誤進入方式</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$ids</span>)) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;ajaxFail(<span class="hljs-string">&#x27;請選擇要操作的數據&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">//*檢查*是否使用中</span><br>    <span class="hljs-variable">$food</span> = [];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$model</span> == <span class="hljs-string">&#x27;category_level_2&#x27;</span>) &#123;<br>      <span class="hljs-variable">$level3_id</span> = DB::table(<span class="hljs-string">&#x27;category_level_3&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;parent_id&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;lists(<span class="hljs-string">&#x27;id&#x27;</span>);<br>      <span class="hljs-variable">$food</span> += DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;select(<span class="hljs-string">&#x27;id&#x27;</span>,<span class="hljs-variable">$model</span> . <span class="hljs-string">&#x27;_id&#x27;</span>, <span class="hljs-string">&#x27;category_level_3_id&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>, <span class="hljs-variable">$level3_id</span>)-&gt;orWhereIn(<span class="hljs-variable">$model</span> . <span class="hljs-string">&#x27;_id&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;lists(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$model</span> == <span class="hljs-string">&#x27;category_level_1&#x27;</span>) &#123;<br>      <span class="hljs-variable">$level2_id</span> = DB::table(<span class="hljs-string">&#x27;category_level_2&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;parent_id&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;lists(<span class="hljs-string">&#x27;id&#x27;</span>);<br>      <span class="hljs-variable">$level3_id</span> = DB::table(<span class="hljs-string">&#x27;category_level_3&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;parent_id&#x27;</span>, <span class="hljs-variable">$level2_id</span>)-&gt;lists(<span class="hljs-string">&#x27;id&#x27;</span>);<br>      <span class="hljs-variable">$food</span> += DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;select(<span class="hljs-string">&#x27;id&#x27;</span>,<span class="hljs-variable">$model</span> . <span class="hljs-string">&#x27;_id&#x27;</span>,<span class="hljs-string">&#x27;category_level_2_id&#x27;</span>,<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>, <span class="hljs-variable">$level3_id</span>)-&gt;orWhereIn(<span class="hljs-string">&#x27;category_level_2_id&#x27;</span>, <span class="hljs-variable">$level2_id</span>)-&gt;orWhereIn(<span class="hljs-variable">$model</span> . <span class="hljs-string">&#x27;_id&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;lists(<span class="hljs-string">&#x27;id&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$model</span> == <span class="hljs-string">&#x27;category_level_3&#x27;</span>) &#123;<br>      <span class="hljs-variable">$food</span> += DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;select(<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;category_level_3&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_3&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;lists(<span class="hljs-string">&#x27;id&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$food</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;ajaxFail(<span class="hljs-string">&#x27;刪除失敗，仍有食物使用到此分類&#x27;</span>);<br>      <span class="hljs-keyword">exit</span>();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">//*刪除*資料表內容</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$level2_id</span>)) &#123;<br>        DB::table(<span class="hljs-string">&#x27;category_level_2&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-variable">$level2_id</span>)-&gt;delete();<br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$level3_id</span>)) &#123;<br>        DB::table(<span class="hljs-string">&#x27;category_level_3&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-variable">$level3_id</span>)-&gt;delete();<br>      &#125;<br>      <span class="hljs-variable">$success</span> = DB::table(<span class="hljs-variable">$model</span>)-&gt;whereIn(<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;delete();<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable">$success</span>) &#123;<br>        <span class="hljs-keyword">$this</span>-&gt;onDelete(<span class="hljs-variable">$ids</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;ajaxSuccess(<span class="hljs-string">&#x27;刪除成功&#x27;</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;ajaxFail(<span class="hljs-string">&#x27;刪除失敗&#x27;</span>);<br>      &#125;<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p><del>這段程式已經經過簡化再簡化，我目前的能力就只到這了</del></p><blockquote><p>2021.12.16 上網找了一下，真的有orWhereIn這個語法，但在laravel文檔中並沒有</p><p>然後測試過後發現三個狀態全部寫死最快，只撈一次資料表並將所有要找的東西一次找完，測試小資料最後剩下五秒鐘，在可接受範圍內</p></blockquote><p>當初一開始是將整張資料表撈出</p><p>因為資料表過於龐大，所以光檢查資料表就會耗費許多時間，刪除一個資料大概會有五分鐘，造成使用者體驗極差</p><p>最後將搜尋欄位減少，針對性的索取資料，不過因為沒有顯示在前台<del>，所以連<code>id</code>欄位都不撈了</del></p><p>希望之後變強大的時候能夠更有效率執行這塊</p><p>第一次修正</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;select(<span class="hljs-string">&#x27;category_level_2_id&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_2_id&#x27;</span>, <span class="hljs-variable">$level2_id</span>)-&gt;lists(<span class="hljs-string">&#x27;category_level_2_id&#x27;</span>);<br>DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;select(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>, <span class="hljs-variable">$level3_id</span>)-&gt;lists(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>);<br></code></pre></td></tr></table></figure><p>最初版</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$level2</span> = DB::table(<span class="hljs-string">&#x27;category_level_2&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;parent_id&#x27;</span>, <span class="hljs-variable">$ids</span>)-&gt;get();<br><span class="hljs-variable">$level2_id</span> = collect(<span class="hljs-variable">$level2</span>)-&gt;pluck(<span class="hljs-string">&#x27;id&#x27;</span>)-&gt;toArray();<br><span class="hljs-variable">$level3</span> = DB::table(<span class="hljs-string">&#x27;category_level_3&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;parent_id&#x27;</span>, <span class="hljs-variable">$level2_id</span>)-&gt;get();<br><span class="hljs-variable">$level3_id</span> = collect(<span class="hljs-variable">$level3</span>)-&gt;pluck(<span class="hljs-string">&#x27;id&#x27;</span>)-&gt;toArray();<br><span class="hljs-variable">$food</span> += DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_2_id&#x27;</span>, <span class="hljs-variable">$level2_id</span>)-&gt;get();<br><span class="hljs-variable">$food</span> += DB::table(<span class="hljs-string">&#x27;food&#x27;</span>)-&gt;whereIn(<span class="hljs-string">&#x27;category_level_3_id&#x27;</span>, <span class="hljs-variable">$level3_id</span>)-&gt;get();<br></code></pre></td></tr></table></figure><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a><font color=#FF6600>總結</font></h1><hr><p>這次的負責的專案內容其實更考驗思考邏輯的問題，前端頁面可能花了一天從其他資料表拔一拔填一填就結束了</p><p>反而是怎麼去跑動程式變的很重要，如果條件變多要怎麼調整搜尋的方式或內容</p><p>然後經過這次使用也越來越了解laravel的使用方式，果然直接下去做學習比較快</p><p>整體時長總共6天，動作快應該是四天，有兩天在做簡單調整，但如果像目前在閱讀這個文章的大神能力夠強可能幾小時就會解決吧…</p><p>所以其實打字速度並不是一定</p><p>然後他寫的<code>ajaxSuccess</code>、<code>onAjaxSuccess</code>等等的功能其實很厲害，就是在基礎的最大框架內放了一個欄位</p><p>藉由接收到後端錯誤的時候判斷顏色並顯示(成功綠色、失敗紅色)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">onAjaxSuccess</span>(<span class="hljs-params">data</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(data &amp;&amp; data.status == <span class="hljs-number">1</span>) &#123;<br>        updateAlert(data.info + <span class="hljs-string">&#x27; 頁面即將自動跳轉~&#x27;</span>,<span class="hljs-string">&#x27;alert-success&#x27;</span>);<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span> (data.url) &#123;<br>                location.href = data.url;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                location.reload();<br>            &#125;<br>        &#125;,<span class="hljs-number">1500</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        updateAlert(data.info);<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> ($(<span class="hljs-string">&#x27;#top-alert&#x27;</span>).hasClass(<span class="hljs-string">&#x27;block&#x27;</span>)) &#123;<br>                $(<span class="hljs-string">&#x27;#top-alert&#x27;</span>).removeClass(<span class="hljs-string">&#x27;block&#x27;</span>);<br>            &#125;<br>        &#125;,<span class="hljs-number">1500</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>這樣的錯誤方式比alret要再次點擊確認的方式好多了，看來又比之前學到更多東西了呢(˘•ω•˘)</p>]]></content>
    
    
    <categories>
      
      <category>疑難雜症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>疑難雜症</tag>
      
      <tag>多重</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git Clone / Git Pull</title>
    <link href="/2021/12/02/Git-Clone-Git-Pull/"/>
    <url>/2021/12/02/Git-Clone-Git-Pull/</url>
    
    <content type="html"><![CDATA[<h1 id="Git-Clone"><a href="#Git-Clone" class="headerlink" title="Git Clone"></a><font color=#FF6600>Git Clone</font></h1><p><img src="/img/S__67633243.jpg"></p><p><code>git clone &lt;url&gt;</code>是把整個路徑拉下來，在vscode的powershell裡面，會在位置內多建立一個資料夾拉下你的專案</p><p>由於整個專案拉下來，所以你會看到很多不同分支</p><p><font color=#0000FF><strong>Q</strong></font>:可是我拉下來看 <code>git branch</code> 蝦咪巄博</p><p>因為<code>git branch</code>是只能看到自己目前本地的分支的</p><p>所以為了確認遠端的分支，指令應該是<code>git branch -a</code></p><p>這樣就可以看到整個專案出現的所有分支囉</p><p>接下來用<code>git checkout &lt;branch&gt;</code>就可以切換到遠端的分支了</p><p>同時你的vscode也會有所改變</p><p><code>git pull &lt;name&gt; &lt;url&gt; &lt;branch&gt;</code> 因為有設定branch就是只拉了那一個分支下來去做處理</p><p>自然無法像clone一樣隨意切換專案分支，但是抓東西下來比對的時候還是pull會方便一些</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vscode</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多重陣列資料</title>
    <link href="/2021/11/30/%E5%A4%9A%E9%87%8D%E9%99%A3%E5%88%97%E8%B3%87%E6%96%99/"/>
    <url>/2021/11/30/%E5%A4%9A%E9%87%8D%E9%99%A3%E5%88%97%E8%B3%87%E6%96%99/</url>
    
    <content type="html"><![CDATA[<h1 id="多重陣列資料"><a href="#多重陣列資料" class="headerlink" title="多重陣列資料"></a><font color=#FF6600>多重陣列資料</font></h1><p>昨天我們學長出了一個題目給我們做思考</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$original</span>= [<br><span class="hljs-string">&#x27;0&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-11-29&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br><span class="hljs-string">&#x27;1&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-11-30&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br><span class="hljs-string">&#x27;2&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-12-01&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br><span class="hljs-string">&#x27;3&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-12-02&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]]<br>];<br><br><span class="hljs-variable">$result</span> = [<br><span class="hljs-string">&#x27;0&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-11-29&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>],<span class="hljs-string">&#x27;select&#x27;</span>=&gt;[<span class="hljs-string">&#x27;0930的時間&#x27;</span>=&gt;<span class="hljs-number">0930</span>~<span class="hljs-number">1000</span>,<span class="hljs-string">&#x27;0945的時間&#x27;</span>=&gt;<span class="hljs-number">0945</span>~<span class="hljs-number">1015</span>,<span class="hljs-string">&#x27;1000的時間&#x27;</span>=&gt;<span class="hljs-number">1000</span>~<span class="hljs-number">1030</span>,...,<span class="hljs-string">&#x27;1215的時間&#x27;</span>=&gt;<span class="hljs-number">1215</span>~<span class="hljs-number">1245</span>,<span class="hljs-string">&#x27;1230的時間&#x27;</span>=&gt;<span class="hljs-number">1230</span>~<span class="hljs-number">1300</span>,<span class="hljs-string">&#x27;1330的時間&#x27;</span>=&gt;<span class="hljs-number">1330</span>~<span class="hljs-number">1400</span>,......,<span class="hljs-string">&#x27;2300的時間&#x27;</span>=&gt;<span class="hljs-number">2300</span>~<span class="hljs-number">2330</span>]]<br><span class="hljs-string">&#x27;1&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-11-30&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>],<span class="hljs-string">&#x27;select&#x27;</span>=&gt;[<span class="hljs-string">&#x27;0930的時間&#x27;</span>=&gt;<span class="hljs-number">0930</span>~<span class="hljs-number">1000</span>,<span class="hljs-string">&#x27;0945的時間&#x27;</span>=&gt;<span class="hljs-number">0945</span>~<span class="hljs-number">1015</span>,<span class="hljs-string">&#x27;1000的時間&#x27;</span>=&gt;<span class="hljs-number">1000</span>~<span class="hljs-number">1030</span>,...,<span class="hljs-string">&#x27;1215的時間&#x27;</span>=&gt;<span class="hljs-number">1215</span>~<span class="hljs-number">1245</span>,<span class="hljs-string">&#x27;1230的時間&#x27;</span>=&gt;<span class="hljs-number">1230</span>~<span class="hljs-number">1300</span>,<span class="hljs-string">&#x27;1330的時間&#x27;</span>=&gt;<span class="hljs-number">1330</span>~<span class="hljs-number">1400</span>,......,<span class="hljs-string">&#x27;2300的時間&#x27;</span>=&gt;<span class="hljs-number">2300</span>~<span class="hljs-number">2330</span>]]<br><span class="hljs-string">&#x27;2&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-12-01&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>],<span class="hljs-string">&#x27;select&#x27;</span>=&gt;[<span class="hljs-string">&#x27;0930的時間&#x27;</span>=&gt;<span class="hljs-number">0930</span>~<span class="hljs-number">1000</span>,<span class="hljs-string">&#x27;0945的時間&#x27;</span>=&gt;<span class="hljs-number">0945</span>~<span class="hljs-number">1015</span>,<span class="hljs-string">&#x27;1000的時間&#x27;</span>=&gt;<span class="hljs-number">1000</span>~<span class="hljs-number">1030</span>,...,<span class="hljs-string">&#x27;1215的時間&#x27;</span>=&gt;<span class="hljs-number">1215</span>~<span class="hljs-number">1245</span>,<span class="hljs-string">&#x27;1230的時間&#x27;</span>=&gt;<span class="hljs-number">1230</span>~<span class="hljs-number">1300</span>,<span class="hljs-string">&#x27;1330的時間&#x27;</span>=&gt;<span class="hljs-number">1330</span>~<span class="hljs-number">1400</span>,......,<span class="hljs-string">&#x27;2300的時間&#x27;</span>=&gt;<span class="hljs-number">2300</span>~<span class="hljs-number">2330</span>]]<br><span class="hljs-string">&#x27;3&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-12-02&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>],<span class="hljs-string">&#x27;select&#x27;</span>=&gt;[<span class="hljs-string">&#x27;0930的時間&#x27;</span>=&gt;<span class="hljs-number">0930</span>~<span class="hljs-number">1000</span>,<span class="hljs-string">&#x27;0945的時間&#x27;</span>=&gt;<span class="hljs-number">0945</span>~<span class="hljs-number">1015</span>,<span class="hljs-string">&#x27;1000的時間&#x27;</span>=&gt;<span class="hljs-number">1000</span>~<span class="hljs-number">1030</span>,...,<span class="hljs-string">&#x27;1215的時間&#x27;</span>=&gt;<span class="hljs-number">1215</span>~<span class="hljs-number">1245</span>,<span class="hljs-string">&#x27;1230的時間&#x27;</span>=&gt;<span class="hljs-number">1230</span>~<span class="hljs-number">1300</span>,<span class="hljs-string">&#x27;1330的時間&#x27;</span>=&gt;<span class="hljs-number">1330</span>~<span class="hljs-number">1400</span>,......,<span class="hljs-string">&#x27;2300的時間&#x27;</span>=&gt;<span class="hljs-number">2300</span>~<span class="hljs-number">2330</span>]]<br>];<br></code></pre></td></tr></table></figure><p>用簡短的方式把<code>$origin</code>變成<code>$result</code>，光這題就花掉我半天時間</p><p><a href="http://sandbox.onlinephpfunctions.com/code/f152f24622022cf2bfcf0e18245d66aa93741211">我的作法</a></p><p>之後下午接收到訊息是time裡面不一定是固定時間也不一定兩個時段，所以寫法又有更改</p><p>弄到下班還是差了臨門一腳，看來只能明天再繼續了。</p><p><a href="http://sandbox.onlinephpfunctions.com/code/c7bb48b962ddc04e2cddb77dd01ed0a991ceffb0">半成品</a></p><!-- [半成品2](https://sandbox.onlinephpfunctions.com/code/633e249d760953f802d58703e6d81c3d90467ba3) --><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$reservation_time_list</span>= [<br><span class="hljs-string">&#x27;0&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-11-29&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br><span class="hljs-string">&#x27;1&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-11-30&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;03:30-09:00&quot;</span>, <span class="hljs-string">&quot;19:30-23:30&quot;</span>]],<br><span class="hljs-string">&#x27;2&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-12-01&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;08:30-12:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br><span class="hljs-string">&#x27;3&#x27;</span>=&gt;[<span class="hljs-string">&#x27;day&#x27;</span>=&gt; <span class="hljs-string">&quot;2021-12-02&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span>=&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]]<br>];<br><br>    <span class="hljs-variable">$select</span>=[];<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$reservation_time_list</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$index</span> =&gt; <span class="hljs-variable">$each</span>)&#123;<br>        <span class="hljs-comment">//確認有效時間</span><br>        <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$each</span>[<span class="hljs-string">&#x27;time&#x27;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>)<br>        &#123;<br>            <span class="hljs-comment">//拆開時段的始 末時間</span><br>            <span class="hljs-variable">$opentime</span>=mb_split(<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-variable">$value</span>);<br>            <span class="hljs-comment">//時段會在同一陣列內，拆成秒數</span><br>            <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$opentime</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$tmpkey</span> =&gt; <span class="hljs-variable">$time</span>)<br>            &#123;<br>                <span class="hljs-variable">$start</span>[<span class="hljs-variable">$tmpkey</span>]=strtotime(<span class="hljs-variable">$time</span>)- strtotime(<span class="hljs-string">&#x27;TODAY&#x27;</span>);<br>            &#125;<br>    <span class="hljs-comment">//處理時間</span><br>    <span class="hljs-comment">//一天86400秒，15分鐘900秒</span><br>                <span class="hljs-variable">$count</span>=count(<span class="hljs-variable">$start</span>);<br>                print_r(<span class="hljs-variable">$start</span>);<br>            <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">86400</span>;<span class="hljs-variable">$i</span>+=<span class="hljs-number">900</span>)<br>            &#123;<br>                <span class="hljs-comment">//時間始至末的秒數</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&gt;=<span class="hljs-variable">$start</span>[<span class="hljs-number">0</span>] &amp;&amp; (<span class="hljs-variable">$i</span>+<span class="hljs-number">1800</span>)&lt;=<span class="hljs-variable">$start</span>[<span class="hljs-number">1</span>])<br>                &#123;<br>                    <span class="hljs-variable">$select</span>+=[gmdate(<span class="hljs-string">&#x27;Hi的時間戳&#x27;</span>,<span class="hljs-variable">$i</span>)=&gt;gmdate(<span class="hljs-string">&#x27;Hi&#x27;</span>,<span class="hljs-variable">$i</span>).<span class="hljs-string">&#x27;~&#x27;</span>.gmdate(<span class="hljs-string">&#x27;Hi&#x27;</span>,(<span class="hljs-variable">$i</span>+<span class="hljs-number">1800</span>))];<br>                &#125;<br>            &#125;<br>        &#125;<br>    <span class="hljs-comment">//資料倒回原始陣列</span><br><br>        <span class="hljs-variable">$reservation_time_list</span>[<span class="hljs-variable">$index</span>][<span class="hljs-string">&#x27;select&#x27;</span>]=<span class="hljs-variable">$select</span>;<br>    &#125;<br>    print_r(<span class="hljs-variable">$reservation_time_list</span>);<br></code></pre></td></tr></table></figure><p><font color=#DD2222>大神提供給我的版本</font></p><p><a href="http://sandbox.onlinephpfunctions.com/code/2da6f447069c5f529be1ed862fd49f8671cd933a">大神版本</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php">define(<span class="hljs-string">&#x27;TIMESTAMP_INTERVAL&#x27;</span>, <span class="hljs-number">15</span> * <span class="hljs-number">60</span>); <span class="hljs-comment">// 時間戳間隔</span><br>define(<span class="hljs-string">&#x27;TIMESTAMP_LENGTH&#x27;</span>, <span class="hljs-number">30</span> * <span class="hljs-number">60</span>); <span class="hljs-comment">// 時間戳長度</span><br><br><span class="hljs-variable">$lists</span> = [<br>    <span class="hljs-string">&#x27;0&#x27;</span> =&gt; [<span class="hljs-string">&#x27;day&#x27;</span> =&gt; <span class="hljs-string">&quot;2021-11-29&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span> =&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br>    <span class="hljs-string">&#x27;1&#x27;</span> =&gt; [<span class="hljs-string">&#x27;day&#x27;</span> =&gt; <span class="hljs-string">&quot;2021-11-30&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span> =&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br>    <span class="hljs-string">&#x27;2&#x27;</span> =&gt; [<span class="hljs-string">&#x27;day&#x27;</span> =&gt; <span class="hljs-string">&quot;2021-12-01&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span> =&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]],<br>    <span class="hljs-string">&#x27;3&#x27;</span> =&gt; [<span class="hljs-string">&#x27;day&#x27;</span> =&gt; <span class="hljs-string">&quot;2021-12-02&quot;</span>, <span class="hljs-string">&#x27;time&#x27;</span> =&gt; [<span class="hljs-string">&quot;09:30-13:00&quot;</span>, <span class="hljs-string">&quot;13:30-23:30&quot;</span>]]<br>];<br><br><br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$lists</span> <span class="hljs-keyword">as</span> &amp;<span class="hljs-variable">$list</span>) &#123;<br>    <span class="hljs-variable">$result</span> = [];<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$list</span>[<span class="hljs-string">&#x27;time&#x27;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$time</span>) &#123;<br>        <span class="hljs-variable">$startTime</span> = strtotime(explode(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-variable">$time</span>)[<span class="hljs-number">0</span>]);<br>        <span class="hljs-variable">$endTime</span> = strtotime(explode(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-variable">$time</span>)[<span class="hljs-number">1</span>]);<br>        <span class="hljs-variable">$result</span> = array_merge(<span class="hljs-variable">$result</span>, generatTimestamps(<span class="hljs-variable">$startTime</span>, <span class="hljs-variable">$endTime</span>));<br>    &#125;<br>    <span class="hljs-variable">$list</span>[<span class="hljs-string">&#x27;select&#x27;</span>] = <span class="hljs-variable">$result</span>;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generatTimestamps</span>(<span class="hljs-params"><span class="hljs-keyword">int</span> <span class="hljs-variable">$startTime</span>, <span class="hljs-keyword">int</span> <span class="hljs-variable">$endTime</span></span>): <span class="hljs-title">array</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$quotient</span> = intval((<span class="hljs-variable">$endTime</span> - <span class="hljs-variable">$startTime</span>) / TIMESTAMP_INTERVAL);<br>    <span class="hljs-variable">$stamps</span> = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt;= <span class="hljs-variable">$quotient</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$stampStartTime</span> = date(<span class="hljs-string">&#x27;H:i&#x27;</span>, <span class="hljs-variable">$startTime</span> + TIMESTAMP_INTERVAL * <span class="hljs-variable">$i</span>);<br>        <span class="hljs-variable">$stampEndTime</span> = date(<span class="hljs-string">&#x27;H:i&#x27;</span>, <span class="hljs-variable">$startTime</span> + TIMESTAMP_INTERVAL * <span class="hljs-variable">$i</span> + TIMESTAMP_LENGTH);<br>        <span class="hljs-variable">$stamps</span>[<span class="hljs-variable">$stampStartTime</span>] = sprintf(<span class="hljs-string">&quot;%s ~ %s&quot;</span>, <span class="hljs-variable">$stampStartTime</span>, <span class="hljs-variable">$stampEndTime</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$stamps</span>;<br>&#125;<br><br><br>print_r(<span class="hljs-variable">$lists</span>);<br></code></pre></td></tr></table></figure><p>整體來說</p><p>學長的code寫法整個算起來才是比較完整且乾淨的，給人感覺就是該用什麼函式就用什麼</p><p>看來我還太淺了 (๑•́ ₃ •̀๑)</p><h3 id="傳址"><a href="#傳址" class="headerlink" title="傳址"></a><font color=#FFD700>傳址</font></h3><p>其中也有一個”&amp;”傳址的東西值得研究，這在我當初考試的時候並沒有使用</p><p>但學長的code有使用到，而且會比重新做一個新陣列去接他來的容易</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//使用未參考</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;直接傳值:&quot;</span>;<br><span class="hljs-variable">$value1</span> = <span class="hljs-string">&quot;halo world&quot;</span>;<br><span class="hljs-variable">$value2</span> = <span class="hljs-variable">$value1</span>;<br><span class="hljs-variable">$value3</span> = <span class="hljs-variable">$value2</span>;<br><span class="hljs-variable">$value1</span> = <span class="hljs-string">&quot;show me &quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$value1</span> <span class="hljs-subst">$value2</span> <span class="hljs-subst">$value3</span> ||| &quot;</span> ;<br><br><span class="hljs-comment">//使用參考</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;使用傳址參考:&quot;</span>;<br><span class="hljs-variable">$value1</span> = <span class="hljs-string">&quot;halo world&quot;</span>;<br><span class="hljs-variable">$value2</span> =&amp; <span class="hljs-variable">$value1</span>;<br><span class="hljs-variable">$value3</span> =&amp; <span class="hljs-variable">$value2</span>;<br><br><span class="hljs-variable">$value1</span> = <span class="hljs-string">&quot;show me &quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$value1</span> <span class="hljs-subst">$value2</span> <span class="hljs-subst">$value3</span>&quot;</span> ;<br></code></pre></td></tr></table></figure><p>輸出結果會是：</p><p><code>直接傳值:show me  halo world halo world ||| 使用傳址參考:show me  show me  show me </code></p><p>懂他的差異了嗎？</p><p>傳值是只有改變原始的東C，所以1被改變後，因程式碼關係不影響23</p><p>傳址會繼承上去，1被改變之後，23也會變成被改變的形狀</p><p>看來今天又比昨天更進步了一點呢(˘•ω•˘)</p>]]></content>
    
    
    <categories>
      
      <category>疑難雜症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>疑難雜症</tag>
      
      <tag>多重陣列</tag>
      
      <tag>傳址</tag>
      
      <tag>多重</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>網頁設計乙級心得&amp;解析</title>
    <link href="/2021/11/29/%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88%E4%B9%99%E7%B4%9A%E5%BF%83%E5%BE%97-%E8%A7%A3%E6%9E%90/"/>
    <url>/2021/11/29/%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88%E4%B9%99%E7%B4%9A%E5%BF%83%E5%BE%97-%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="網頁設計乙級技術士"><a href="#網頁設計乙級技術士" class="headerlink" title="網頁設計乙級技術士"></a><font color=#FF6600>網頁設計乙級技術士</font></h1><p><em>其實這張證照真的沒有什麼特別的功用。</em></p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color=#FFD700>前言</font></h3><p>畢竟說實話，就以目前認為，實力才是PG的分界點。</p><p><font color=#00DDDD>「寧可請一個Ａ＋的工程師也不要找三個Ｃ＋的工程師」</font></p><p>無論在邏輯上、概念上、設計上、碰到狀況的處理上，一個Ａ＋都會有辦法減少失誤寫出較符合或是易讀性高的code。</p><p>但三個C+可能都解不掉一個A+花一小時解完的題目，就像我本來開hexo就是為了記錄乙級考試，</p><p>結果前面工作上不斷碰到的狀況讓我一直沒有時間去思考這些事情。</p><p>但那些東西對有經驗的工程師來說，可能是不用10分鐘或是1分鐘就可以做出來的功能，我卻因為其中一個邏輯可以卡兩個工作天加休假日。</p><p>但可能就是為了當作自己上課驗收的結果，及熟悉PHP(當時因為作業已經完全變成JavaScript的形狀了)。</p><p>有時間來考一下也是不錯的(至少公家機關會用的到?)。</p><p>不過也因為時間的關係，有些記憶上也沒那麼清楚了，所以只有提個大概，有問題在私底下詢問我吧！</p><h3 id="乙級概略"><a href="#乙級概略" class="headerlink" title="乙級概略"></a><font color=#FFD700>乙級概略</font></h3><p>乙級考的重點是：<strong>速度</strong>、<strong>熟練度</strong></p><p>對於程式理解這一塊講難聽點是可以<font color=#800000><em>不需要的</em></font>。雖然說這才是練習的目的。</p><h2 id="上古神獸的學長大神們，是有人用”純HTML“做完其中一題的。"><a href="#上古神獸的學長大神們，是有人用”純HTML“做完其中一題的。" class="headerlink" title="上古神獸的學長大神們，是有人用”純HTML“做完其中一題的。"></a>上古神獸的學長大神們，是有人用”<strong>純HTML</strong>“做完其中一題的。</h2><p>這時候你會很納悶，怎麼可能?光會員登入登出顯示的網頁就不一樣了阿?</p><p>據學長口述，他是直接將登入和非登入做成不同頁面，也就是說有幾種型態就有幾種頁面(你對文章說讚、不同使用者)。</p><p>最後他也成功過關了，因為驗收的老師也不懂程式他只看功能，所以功能出來，<strong>OK！</strong></p><p>這時候你一定會覺得「 <strong>這麼簡單的東西幹嘛還要做?</strong> 」。</p><p>但當你真正去理解在做什麼時候，你就不會覺得他”<strong>這麼簡單</strong>“了</p><p>其實四題題型主要都是<u>從0創造出一整個網站</u>，所以會有共用函示的關係。</p><p>如何去<font color=#800000><strong>創造適合自己的共用函式</strong></font>，就是需要思考的一環。</p><p>目前有考前<font color=#FF0000>90分鐘設定環境</font>及<font color=#FF0000>240分鐘決定題目並考試</font>。</p><p>如果對環境設定掌握度夠，基本上會有75分鐘是自己的時間。</p><p>但是我自己個人是設定60分鐘(實際上戰場時時間多很多)。所以我也繼續檢查和延續其他功能。</p><h2 id="環境設定時間就是做環境設定，只是偷偷的設定對資料庫CRUD的共用函式去檢查資料庫是否正常。"><a href="#環境設定時間就是做環境設定，只是偷偷的設定對資料庫CRUD的共用函式去檢查資料庫是否正常。" class="headerlink" title="環境設定時間就是做環境設定，只是偷偷的設定對資料庫CRUD的共用函式去檢查資料庫是否正常。"></a><strong>環境設定</strong>時間就是做環境設定，只是<del>偷偷</del>的設定對資料庫CRUD的共用函式去檢查資料庫是否正常。</h2><p>所以請切記不要太明目張膽，這就是你利用時間的好方法。</p><h1 id="第一題-某某學校網站"><a href="#第一題-某某學校網站" class="headerlink" title="第一題 某某學校網站"></a><font color=#FF6600>第一題 某某學校網站</font></h1><p>乙級第一題算是功能最為簡單的一題?主要都在考驗<font color=#800000>對資料庫溝通的方式(CRUD)</font>。</p><p>有各式各樣的功能去做溝通，在後台建立介面，修改並對資料庫送出，然後適當的顯示在前台。</p><p>前台只會有一個頁面(加上幾個小功能跳轉頁面)，但後台會有非常多頁面(針對前台所有的小角落反應的頁面)。</p><p>說實話，頁面都是差不多功能，所以基本上複製貼上就可以解決所有的後台。</p><p>所以也會變成個人網站的版型好選擇，因為後台設定好之後會很好修改。</p><p>難度：<font color=#00FFFF>簡單</font>。因為四題都有資料庫溝通的問題。若共用函式設定良好，這題基本上<strong>一個小時多可以完成</strong>。這題非常值得投資練習。</p><h1 id="第二題-某個健康資訊網站"><a href="#第二題-某個健康資訊網站" class="headerlink" title="第二題 某個健康資訊網站"></a><font color=#FF6600>第二題 某個健康資訊網站</font></h1><p>乙級第二題的大功能大概是落在問卷調查及<font color=#800000>層級頁面關係(A&gt;a&gt;aa)</font>。</p><p>問卷調查顯示<font color=#808000>人數</font>，<font color=#800080>文章</font>，<font color=#0000FF>登入後投票</font>，<font color=#008000>統計</font>等等的頁面跳轉之間會比較<em>需要思考</em>。</p><p>同時<font color=#800000>記憶會員登入狀態，針對此會員點過讚與沒點過讚的狀態去做頁面的記憶與呈現。</font></p><p>在你理解程式運作之後，這東西並不困難，只是腦袋要夠清晰。</p><p>這題個人是用偷吃步的方式去完成，雖然沒有抽到，不過可以節省許多時間。</p><p>對打字慢的人會是一種福音。</p><p>難度：<font color=#00FF00>普通</font>。如果熟練的話，<strong>兩個小時多</strong>也能完成，<u>但是如果沒練習初次上機，也是很有機會<strong>超過時限4小時</strong>的。</u></p><h1 id="第三題-某個電影網站"><a href="#第三題-某個電影網站" class="headerlink" title="第三題 某個電影網站"></a><font color=#FF6600>第三題 某個電影網站</font></h1><p>乙級第三題的功能落在<font color=#800000>前台的刻板</font>，後台聽說只有兩個網頁。</p><p>但前台的複雜程度可說是魔王級，也是我在看過老師解題後果斷放棄的唯一一題，一個光講解就要花上<strong>400分鐘</strong>的題目。</p><p>建造的共用函式影響度也是最小的，畢竟後台的東西不多。</p><p>很考驗<font color=#800000>js的運用(考試有jq)</font>，不過要做出完美的解答基本上是不可能的，因為圖片維持在未閹割板，也就是比魔王更魔王的程度。</p><p>難度：<font color=#FF0000>困難</font>。對我而言<font color=#800000>極度困難</font>，雖然說不是練不起來，但<em>投資報酬率很低</em>，前期就需要花很多時間記憶刻板的數字(150px、10%)</p><h1 id="第四題-某個購物網站-抽到的考題"><a href="#第四題-某個購物網站-抽到的考題" class="headerlink" title="第四題 某個購物網站(抽到的考題)"></a><font color=#FF6600>第四題 某個購物網站</font>(抽到的考題)</h1><p>乙級第四題的功能落在<font color=#800000>後台的購物系統</font>，如何牽扯購物完成到購物資訊紀錄等等的功能。</p><p>前台可說是被閹割的非常陽春，沒有css美化你會覺得他是一個沒有完成的網站。</p><p>但是後台會非常考驗你對題目的理解度，雖然我也才練了四五次，但也是做到時間接近壓線才交卷(一方面是複雜度讓我檢查三次，會遺漏一些功能)。</p><p>功能可謂是一環扣著一環。與第一題個別功能不同，<font color=#800000><strong>購物車系統要做出來</strong>，才能繼續作訂單系統。</font></p><p>也就是說<strong>如果</strong>訂單系統不做，其他功能都做你才<font color=#FF0000><em>“剛好及格”</em></font>，但如果你對系統很了解，其實花的時間並不多。</p><p>難度：<font color=#FF0000>困難</font>。對我而言<font color=#00FF00>普通</font>，有練習對程式有理解的話，是可以在<strong>兩小時多完成</strong>的，加上前期創造的<strong>共用函式</strong>，針對後台去做的話，基本上第四題可以節省掉很多時間。</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a><font color=#0000FF>心得</font></h2><p>除了<strong>第三題</strong>我是連練習實作時間都<font color=#FF0000>完全省下來</font>(賭<font color=#FF0000>75%機率</font>抽不到這題)，抽到我就<font color=#00FF00>高歌離席</font>。</p><p>其他幾題練習的次數都並不多，再來有寫好一套除了CRUD之外的判斷，或是鍵盤快速鍵等等設定(我是沒用)，前面的環境設定就是影響你考試順暢度的一個重點。</p><blockquote><p>第一題練習到有把握時限內完成的次數：2次</p><p>第二題練習到有把握時限內完成的次數：3次</p><p>第四題練習到有把握時限內完成的次數：4次</p></blockquote><blockquote><p>第一題因為判斷頁面完整的關係，所有的後台都進入判斷頁面進行CRUD，我只需要把該放的按鈕補上就好，第一次邊看邊做之後，第二次就是時限內。是一題熟悉後並且建立的判斷完整就不需要花時間去練習的題目。</p></blockquote><blockquote><p>第二題當初一開始練習過一次(作業考試)，其中發現了偷吃步的方法(這題也是HTML學長完成的題目)，省略很多去撈資料庫的判斷，直接用複製貼上並更改格式的方式去改變頁面型態。光這個步驟熟練的重做一頁也是5~10分鐘，但複製修改css不需要一分鐘，藉由題目沒有強制要求某些css的漏洞，有很多節省時間的小步驟可以去做。<br>但也為了要穩定並且有把握在時限內完成，和測試出這些看起來不會影響寫起來影響很大的功能，這題做的次數應該有到7~8次。等到時限內有完成才會針對CSS樣式或是可能會扣分小功能做補齊。</p></blockquote><blockquote><p>第四題第一次去理解的時候已經狀態完全在乙級練習內(不會沒事逛逛網站看看影片的專注度中)。雖然理解時間也是花了很長的時間，但因為第四題感覺像是完全體，針對第四題去創作共用函式同時第一第二題也會受惠，所以針對第四題去更改判斷頁面後，第四題 <em>“完整的”</em> 練了四次之後才能把握在三小時多完成，但因考慮到未來發展和出路多數都是第四題會使用到的東西，第四題就成為自己練乙級的主要目標了。<br>寫的時候基本上要對流程很清楚，做完哪個開始做哪個，哪些步驟一路做下去，到一個雛形才會去做檢查(我自己是前台完成檢查一次，後台購物車前檢查一次，購物車和訂單瘋狂檢查，因為錯誤率高)。也因為閹割過的關係，前台基本上很快完成，目前題目感覺已經合理很多是個測試能力的好題目。</p></blockquote><h6 id="環境設定時間分享："><a href="#環境設定時間分享：" class="headerlink" title="環境設定時間分享："></a>環境設定時間分享：</h6><p>除了撰寫系統安裝之外(vscode、xampp)，因為沒網路關係沒辦法使用框架(laravel)，也沒有資安問題所有沒有將xampp改成VM虛擬機去做架設。這些安裝功能設定完畢大概十分鐘。如果是用vscode可能會碰到硬體加速造成黑畫面，註解掉或用系統管理員身分執行似乎就可以過濾這些問題。</p><p>其他時間利用框架想法，除了基本資料庫CRUD共構函式建立外，加上判斷頁面，並且做一個登入功能來做測試，(四題都有會員)測試完畢後時間差不多也到(加上少打分號或是碰到錯誤解決的時間。)</p><p>這些東西建立完成後，在考試中移植登入功能，就可以減短自己將近10分鐘的撰寫時間，只要理解哪一題資料表怎麼設定，或是會員要求有多新增什麼去做設定，一樣會很節省自己的時間。</p><p>其他研究出的功能，如果哪天有心情在做分享了，以上(˘•ω•˘)</p>]]></content>
    
    
    <categories>
      
      <category>網頁設計乙級</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>網頁設計乙級</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>金流金牛</title>
    <link href="/2021/11/25/%E9%87%91%E6%B5%81%E9%87%91%E7%89%9B/"/>
    <url>/2021/11/25/%E9%87%91%E6%B5%81%E9%87%91%E7%89%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="金流api、開立發票"><a href="#金流api、開立發票" class="headerlink" title="金流api、開立發票"></a><font color=#FF6600>金流api、開立發票</font></h1><p>最近開始碰到這個功能，包括台新apple pay、Line pay等等，</p><p>簡單來說這個功能就是，他給你文件，文件上會跟你說他要什麼，然後他會回給你什麼</p><p>你要做的事情，就是把他要的弄出來，把他回傳的東西接回來處理</p><span id="more"></span><p>如果沒有上面那一塊定義，我可能到現在還搞不懂金流跟綠界發票怎麼用</p><p>文件很臭很長，我對讀文件這件事情真的是毫無辦法，不然套用老人家說的，我早就讀到第一學府了(?)</p><p>簡單來說，碰到付款就會碰到金流的問題，金流有各個廠商店家不同，複雜度也會不同</p><p>舉例我接觸的這兩個，line pay要先<a href="https://pay.line.me/tw/developers/techsupport/sandbox/save?locale=zh_TW">申請SandBox帳號</a>測試，申請完畢後會送你一組帳號密碼。</p><p>登入之後就可以取得屬於你自己的key跟ID，然後要加入伺服器IP來接收(白名單)，這塊我還沒弄懂。</p><p>Header的部分就有<code>Content-Type</code>(基本每個都有這項)；<code>X-LINE-ChannelId</code>(你的ID)；<code>X-LINE-Authorization-Nonce</code>(目前還不知道放什麼)；<code>X-LINE-Authorization</code>(跟剛剛那個很像但似乎不一樣)</p><p><a href="https://pay.line.me/tw/developers/techsupport/sandbox/testflow?locale=zh_TW">測試流程</a>要進行base64加密等等，因為沒有親自跑過只有看過，他的複雜度比我自己實際使用的台新apple pay麻煩多了</p><p>台新部分就是他會跟你要某些資料，例如訂單資訊、金額等等。然後把這些資料包成json丟給他，他會回傳成功或失敗等等的狀態給你，相關的資訊都可以在文件上找的到，沒有加密解密問題。</p><h5 id="台新apple-pay注意的點：-送出的資料與格式"><a href="#台新apple-pay注意的點：-送出的資料與格式" class="headerlink" title="台新apple pay注意的點： 送出的資料與格式"></a><font color=#DD2222>台新apple pay注意的點： 送出的資料與格式</font></h5><h5 id="Line-pay注意的點：-加密的方式及類型"><a href="#Line-pay注意的點：-加密的方式及類型" class="headerlink" title="Line pay注意的點： 加密的方式及類型"></a><font color=#DD2222>Line pay注意的點： 加密的方式及類型</font></h5><hr><h2 id="然後金流處理完之後"><a href="#然後金流處理完之後" class="headerlink" title="然後金流處理完之後"></a>然後金流處理完之後</h2><p>發票就是接下來的工作了，綠界文件大家都說很詳細照著做就好，但…我就不會讀文件阿！</p><p>就像主管會說，google就找的到資料了，我發現我下的關鍵字都不正確，沒辦法找到自己要的東西</p><p>就算東西出來了，也沒辦法解決我的問題，我嘗試把範例原封不動的搬上去，都還是會碰到一些問題</p><p>像目前就卡在Data找不到，利用json-URL-AES加密後，對他來說資料還是空空如也。</p><p>明天就是週五，希望能有機會突然驚醒或是有天神下凡指導，總覺得有人溝通真的更能確信自己在做的東西方向是對還是錯誤。</p><p>最晚也希望下週能把這些東西產出來…加油</p><ul><li>2021.11.26</li></ul><hr><p>讀了一整遍還是出不來，但做了一些測試，以官方提供的測試範例施作時，會出現</p><p><code>&quot;TransMsg&quot;: &quot;The parameter [Data] decrypt fail&quot;,</code></p><p>的錯誤，<del>可能是我data直接包或是轉譯沒轉好，但目前仍找不到問題出在哪</del></p><p>官方範例</p><p>除了時間跟檔案編號有改之外，其他都是原封不動</p><p><del>也嘗試過URL跟AES加密再送出，一樣是回傳data無法解析的問題</del></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;MerchantID&quot;</span>: <span class="hljs-number">2000132</span>,<br>    <span class="hljs-attr">&quot;RqHeader&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;Timestamp&quot;</span>: <span class="hljs-number">1637905000</span>,<br>        <span class="hljs-attr">&quot;Revision&quot;</span>: <span class="hljs-string">&quot;3.0.0&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;Data&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;MerchantID&quot;</span>: <span class="hljs-string">&quot;2000132&quot;</span>,<br>        <span class="hljs-attr">&quot;RelateNumber&quot;</span>: <span class="hljs-string">&quot;20211125648330501&quot;</span>,<br>        <span class="hljs-attr">&quot;CustomerID&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">&quot;CustomerIdentifier&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">&quot;CustomerName&quot;</span>: <span class="hljs-string">&quot;綠界科技股份有限公司&quot;</span>,<br>        <span class="hljs-attr">&quot;CustomerAddr&quot;</span>: <span class="hljs-string">&quot;106 台北市南港區發票一街 1 號 1 樓&quot;</span>,<br>        <span class="hljs-attr">&quot;CustomerPhone&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">&quot;CustomerEmail&quot;</span>: <span class="hljs-string">&quot;test@ecpay.com.tw&quot;</span>,<br>        <span class="hljs-attr">&quot;ClearanceMark&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>        <span class="hljs-attr">&quot;Print&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>        <span class="hljs-attr">&quot;Donation&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>        <span class="hljs-attr">&quot;LoveCode&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">&quot;CarrierType&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">&quot;CarrierNum&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">&quot;TaxType&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>        <span class="hljs-attr">&quot;SalesAmount&quot;</span>: <span class="hljs-number">100</span>,<br>        <span class="hljs-attr">&quot;InvoiceRemark&quot;</span>: <span class="hljs-string">&quot;發票備註&quot;</span>,<br>        <span class="hljs-attr">&quot;InvType&quot;</span>: <span class="hljs-string">&quot;07&quot;</span>,<br>        <span class="hljs-attr">&quot;vat&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>        <span class="hljs-attr">&quot;Items&quot;</span>: [<br>            &#123;<br>                <span class="hljs-attr">&quot;ItemSeq&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">&quot;ItemName&quot;</span>: <span class="hljs-string">&quot;item01&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemCount&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">&quot;ItemWord&quot;</span>: <span class="hljs-string">&quot;件&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemPrice&quot;</span>: <span class="hljs-number">50</span>,<br>                <span class="hljs-attr">&quot;ItemTaxType&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemAmount&quot;</span>: <span class="hljs-number">50</span>,<br>                <span class="hljs-attr">&quot;ItemRemark&quot;</span>: <span class="hljs-string">&quot;item01_desc&quot;</span><br>            &#125;,<br>            &#123;<br>                <span class="hljs-attr">&quot;ItemSeq&quot;</span>: <span class="hljs-number">2</span>,<br>                <span class="hljs-attr">&quot;ItemName&quot;</span>: <span class="hljs-string">&quot;item02&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemCount&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">&quot;ItemWord&quot;</span>: <span class="hljs-string">&quot;個&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemPrice&quot;</span>: <span class="hljs-number">20</span>,<br>                <span class="hljs-attr">&quot;ItemTaxType&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemAmount&quot;</span>: <span class="hljs-number">20</span>,<br>                <span class="hljs-attr">&quot;ItemRemark&quot;</span>: <span class="hljs-string">&quot;item02_desc&quot;</span><br>            &#125;,<br>            &#123;<br>                <span class="hljs-attr">&quot;ItemSeq&quot;</span>: <span class="hljs-number">3</span>,<br>                <span class="hljs-attr">&quot;ItemName&quot;</span>: <span class="hljs-string">&quot;item03&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemCount&quot;</span>: <span class="hljs-number">3</span>,<br>                <span class="hljs-attr">&quot;ItemWord&quot;</span>: <span class="hljs-string">&quot;粒&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemPrice&quot;</span>: <span class="hljs-number">10</span>,<br>                <span class="hljs-attr">&quot;ItemTaxType&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-attr">&quot;ItemAmount&quot;</span>: <span class="hljs-number">30</span>,<br>                <span class="hljs-attr">&quot;ItemRemark&quot;</span>: <span class="hljs-string">&quot;item03_desc&quot;</span><br>            &#125;<br>        ]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><del>然後自己的測試環境也是data出問題，看來怎麼處理data這塊東西可能是我突破發票這道關卡的因素了</del></p><ul><li>2021.11.29 我大學長點醒了我的問題，讓我發現一件事情</li></ul><p><font color=#00FF00>關於AES加密</font>，不像URL那樣直接丟出去就會幫你轉好</p><p>AES是有key 跟 iv 的，錯誤即會造成解析錯誤</p><p>所以其中一個學長說:<font color=#FF00FF>[你把範例解開來就知道啦！]</font>，我這時才發現我的<strong>愚蠢</strong>，原來我加密出來的東西根本是兩個不同的東西</p><p>另外一個學長則是很好心的幫我釐清整個流程，更讓我確信，我是在加密這一塊出問題</p><p>自然而然他就會回復加密<font color=#FF0000>錯誤的訊息</font>了</p><p><img src="/img/AmountApiError.png"></p><p>終於在處理完這塊後</p><p><img src="/img/AmountApiSuccess.png"></p><h2 id="謝天謝地謝謝好學長們，看來今天又比昨天的我成長了一些-˘•ω•˘"><a href="#謝天謝地謝謝好學長們，看來今天又比昨天的我成長了一些-˘•ω•˘" class="headerlink" title="謝天謝地謝謝好學長們，看來今天又比昨天的我成長了一些(˘•ω•˘)"></a>謝天謝地謝謝好學長們，看來今天又比昨天的我成長了一些(˘•ω•˘)</h2><p>處理完單存開立發票的功能之後，繼續處理折讓部分就會簡單多了(也是此次研發的功能之一)</p><p>發票折讓就是類似於退貨的關係…..嗎?(舉例來說)</p><p>折讓的code也跟說明書說的一樣</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs d"> &#123;<br> <span class="hljs-string">&quot;MerchantID&quot;</span>: <span class="hljs-string">&quot;2000132&quot;</span>,<br> <span class="hljs-string">&quot;RqHeader&quot;</span>: &#123;<br> <span class="hljs-string">&quot;Timestamp&quot;</span>: <span class="hljs-number">1638164115</span>,<br> <span class="hljs-string">&quot;Revision&quot;</span>: <span class="hljs-string">&quot;3.0.0&quot;</span><br> &#125;,<br> <span class="hljs-string">&quot;Data&quot;</span>: <span class="hljs-string">&quot;&#123;</span><br><span class="hljs-string">&quot;</span>MerchantID<span class="hljs-string">&quot;: &quot;</span><span class="hljs-number">2000132</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>InvoiceNo<span class="hljs-string">&quot;: &quot;</span>ZM80000032<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>InvoiceDate<span class="hljs-string">&quot;: &quot;</span><span class="hljs-number">2021</span>/<span class="hljs-number">11</span>/<span class="hljs-number">29</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>AllowanceNotify<span class="hljs-string">&quot;: &quot;</span>E<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>CustomerName<span class="hljs-string">&quot;: &quot;</span>綠界科技股份有限公司<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>NotifyMail<span class="hljs-string">&quot;: &quot;</span>test<span class="hljs-keyword">@ecpay</span>.com.tw<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>NotifyPhone<span class="hljs-string">&quot;: &quot;</span><span class="hljs-number">0</span>912345678<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>AllowanceAmount<span class="hljs-string">&quot;: 60,</span><br><span class="hljs-string">&quot;</span>Items<span class="hljs-string">&quot;: [</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">&quot;</span>ItemSe<span class="hljs-string">q&quot;: 1,</span><br><span class="hljs-string">&quot;</span>ItemName<span class="hljs-string">&quot;: &quot;</span>item01<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>ItemCount<span class="hljs-string">&quot;: 1,</span><br><span class="hljs-string">&quot;</span>ItemWord<span class="hljs-string">&quot;: &quot;</span>件<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>ItemPrice<span class="hljs-string">&quot;: 50,</span><br><span class="hljs-string">&quot;</span>ItemTaxType<span class="hljs-string">&quot;: &quot;</span><span class="hljs-number">2</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>ItemAmount<span class="hljs-string">&quot;: 50</span><br><span class="hljs-string">&#125;,</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">&quot;</span>ItemSe<span class="hljs-string">q&quot;: 3,</span><br><span class="hljs-string">&quot;</span>ItemName<span class="hljs-string">&quot;: &quot;</span>item03<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>ItemCount<span class="hljs-string">&quot;: 1,</span><br><span class="hljs-string">&quot;</span>ItemWord<span class="hljs-string">&quot;: &quot;</span>粒<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>ItemPrice<span class="hljs-string">&quot;: 10,</span><br><span class="hljs-string">&quot;</span>ItemTaxType<span class="hljs-string">&quot;: &quot;</span><span class="hljs-number">1</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>ItemAmount<span class="hljs-string">&quot;: 10</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">]</span><br><span class="hljs-string">&#125;&quot;</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>其中開立成功後會有發票號碼，折讓則是要對著發票號碼去做設定。</p><p>一開始再開立發票時所提供的自訂編號只是一種類似於命名的關係，方便去尋找你這筆資料</p><p>想當然所有Data的東西還是要透過AES方式去加密。一樣在多注意key與iv的關係。</p><p>不過目前位於最後可折讓金額的關係還是有點不清楚，應該是上述友重新送出的品項代表最後發票留下來的東西。</p><p>所以會是相反的40元而不是60。</p><h5 id="綠界要注意的點：時間點、AES加密、品項對應內容、格式"><a href="#綠界要注意的點：時間點、AES加密、品項對應內容、格式" class="headerlink" title="綠界要注意的點：時間點、AES加密、品項對應內容、格式"></a><font color=#FFD700>綠界要注意的點：時間點、AES加密、品項對應內容、格式</font></h5>]]></content>
    
    
    <categories>
      
      <category>疑難雜症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>金流</tag>
      
      <tag>api</tag>
      
      <tag>疑難雜症</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vscode快捷鍵</title>
    <link href="/2021/11/19/Vscode%E5%BF%AB%E6%8D%B7%E9%8D%B5/"/>
    <url>/2021/11/19/Vscode%E5%BF%AB%E6%8D%B7%E9%8D%B5/</url>
    
    <content type="html"><![CDATA[<p>在忙裡偷閒的時間，終於有空補上這一篇，雖然做的還不完整，希望以後會繼續補上其他功能</p><p>希望吧…(•͈⌔•͈⑅)</p><p>裡面會有一些遺漏或是不一樣的，因為都是自己使用習慣的方式去進行，所以沒有最好的只有最適合自己的</p><span id="more"></span><h3 id="選取"><a href="#選取" class="headerlink" title="選取"></a>選取</h3><p><code>Ctrl + D</code> 選取當前字串</p><p><code>Ctrl + D</code> 依序選取當前相同的字串</p><p><code>Ctrl + U</code> 取消選取當前相同的字串 (<code>Ctrl + D</code> 跟<code>Ctrl + Alt + ↑↓</code>的反向)</p><ul><li>較少使用</li></ul><p><code>Ctrl + F2</code> 全部選取同名字串</p><h3 id="尋找與取代"><a href="#尋找與取代" class="headerlink" title="尋找與取代"></a>尋找與取代</h3><p><code>Ctrl +F</code> 快速尋找文件內</p><p><code>F1</code> + <code>backspace</code> || <code>Ctrl + Shift + P</code> + <code>backspace</code> 快速尋找檔名(有更快方式我只是用習慣)</p><p>尋找欄位內：</p><p><code>Enter</code> || <code>F3</code> 快速尋找下一個結果</p><p><code>Shift + Enter</code> 快速尋找上一個結果</p><p><code>向上箭號</code> 快速尋找查看搜尋歷史紀錄</p><p><code>向下箭號</code> 快速尋找查看搜尋歷史紀錄</p><p><code>Esc</code> 關閉尋找</p><p><code>Ctrl +H</code> 快速取代</p><p>取代欄位內：</p><p><code>Alt +R</code>快速取代 - 取代下一個</p><p><code>Alt +A</code>快速取代 - 全部取代</p><p><code>Ctrl +Shift +F</code> 檔案中尋找</p><p><code>Ctrl +Shift +H</code> 檔案中取代</p><ul><li>較少使用</li></ul><p>變數：</p><p><code>Alt + F12</code> 尋找變數定義</p><p><code>F12</code> 跳到定義處</p><p><code>Shift + F12</code> 所有使用到的變數列表</p><h3 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h3><p>未選取任何文字下：</p><p><code>Ctrl + /</code> 註解整段</p><p><code>Ctrl + X</code> 剪下整段</p><p><code>Ctrl + C</code> 複製整段</p><p><code>Ctrl + V</code> 貼上你複製的東西(阿如果你不是複製一整段當然貼不出一整段，再問自殺ಠ·ಠ)</p><p><code>Ctrl + Z</code> 把剛剛做的壞事復原</p><p><code>Ctrl + Shift + Z</code> || <code>Ctrl + Y</code> 把剛剛做的壞事在狠狠的打出來</p><p><code>Home</code> / <code>End</code> 行首 / 行尾</p><p><code>Ctrl + Home</code> / <code>Ctrl + End</code> 頁首 / 頁尾</p><p><code>Alt + 向下箭號</code> 整段文字向下移動一行(可快速選取一區往下)</p><p><code>Alt + 向上箭號</code> 整段文字向上移動一行(可快速選取一區往上)</p><p><code>Shift + Alt + 向下箭號</code> 向下複製整段文字，選取的文字會在下</p><p><code>Shift + Alt + 向上箭號</code> 向上複製整段文字，選取的文字會在上</p><p><code>Ctrl + Alt + 向下箭號</code> 向下增加一個選取位置，位置預設在同樣位置</p><p><code>Ctrl + Alt + 向上箭號</code> 向上增加一個選取位置，位置預設在同樣位置</p><p><code>Ctrl + 向左箭號</code> || <code>Ctrl + 向右箭號</code> 快速跳過一段文字</p><p><code>Ctrl + Shift + 向左箭號</code> || <code>Ctrl + Shift + 向右箭號</code> 快速選取一段文字</p><p><code>Ctrl + A</code> 把所有東西都給他選起來</p><p><code>Shift + Home</code> 從你選取的地方選到整段最前面</p><p><code>Shift + End</code> 從你選取的地方選到整段最後面</p><p><code>Shift + Alt + F</code> 檔案格式編譯器，把文字變好看**注意，有很多擴充軟體會改變這些按鈕，安裝文字格式器要檢查一下<br>**</p><p><code>Alt + Z</code> 將超視窗的文字自動換行</p><ul><li>較少使用</li></ul><p><code>Ctrl + Enter</code> 直接換行(在文字中間也不會斷文字直接換行，通常我都<code>end</code> 再 <code>Enter</code>)</p><p><code>Ctrl + Alt + 滑鼠左鍵</code> 增加點擊的選取位置(用到滑鼠很少用)</p><h3 id="欄位"><a href="#欄位" class="headerlink" title="欄位"></a>欄位</h3><ul><li>Ctrl + K 通常是組合鍵的前置，在按下另外一組組合鍵可以開啟其他功能，兩段操作</li></ul><p><code>Ctrl + K</code> + <code>Ctrl + S</code> 開啟快速鍵設定表</p><p><code>Ctrl + =</code> || <code>Ctrl + +</code> 放大</p><p><code>Ctrl + -</code> 縮小</p><p><code>Ctrl + B</code> (開啟/關閉)左側文件欄位</p><p><code>Ctrl + W</code> 關閉目前的文件</p><p><code>Ctrl + ~</code> ` (開啟/關閉)終端機</p><p><code>Ctrl + S</code> 存檔</p><p><code>Ctrl + Shift + N</code> 開啟新的Vscode視窗</p><p><code>Ctrl + Shift + V</code> 開啟你的md語法預覽器(之前問人他還給我!+<code>[替代文字](https://pgw.udn.com.tw/gw/photo. php?u=https://uc.udn.com.tw/photo/2021/07/29/1/13149926.png&amp;x=0&amp;y=0&amp;sw=0&amp;sh=0&amp;sl=W&amp;fw=1200)</code>這段文字ಠ·ಠ告訴我貼了才教我)</p><p><code>F1</code> || <code>Ctrl + Shift + P</code> 上方下拉式指令欄位</p><ul><li>較少使用</li></ul><p><code>Ctrl + Tab</code> 往下一個編輯頁</p><p><code>Ctrl + Shift + Tab</code> 往前一個編輯頁</p>]]></content>
    
    
    <categories>
      
      <category>快速鍵</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vscode</tag>
      
      <tag>Visual Studio Code</tag>
      
      <tag>快捷鍵</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VM虛擬環境架設</title>
    <link href="/2021/11/15/VM%E8%99%9B%E6%93%AC%E7%92%B0%E5%A2%83%E6%9E%B6%E8%A8%AD/"/>
    <url>/2021/11/15/VM%E8%99%9B%E6%93%AC%E7%92%B0%E5%A2%83%E6%9E%B6%E8%A8%AD/</url>
    
    <content type="html"><![CDATA[<h1 id="VM虛擬環境"><a href="#VM虛擬環境" class="headerlink" title="VM虛擬環境"></a>VM虛擬環境</h1><h6 id="tags-網頁"><a href="#tags-網頁" class="headerlink" title="tags: 網頁"></a>tags: <code>網頁</code></h6><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>看到這標題就知道你來到虛擬主機的環境了，歡迎來到這個世界(๑•́ ₃ •̀๑)，<br>本次使用的是VM BOX(Oracle VM VirtualBox)的程式進行安裝，<a href="https://yiling0308.pixnet.net/blog/post/358163087">參考網址</a><br>因為這次要求的是環境CentOS 7.5.1804、PHP5.6、mysql Ver15.1、Distrib 10.3.18-、MariaDB。本篇介紹就會以上述的條件進行安裝，若版本上有所不同可以google相對應的東西去做更改</p><ul><li><h6 id="第一步：下載Virtual-Box"><a href="#第一步：下載Virtual-Box" class="headerlink" title="第一步：下載Virtual Box"></a>第一步：下載<a href="https://www.virtualbox.org/">Virtual Box</a></h6></li><li><p>第二步：下載centOS的映像檔，官方網站有版本但可能會針對環境做許多不同版本的更改<br> 版本資訊可以上網google，這邊推薦幾個用過的<a href="http://ftp.jaist.ac.jp/pub/Linux/CentOS-vault/7.5.1804/isos/x86_64/">網站</a>、<a href="https://centos.cs.nctu.edu.tw/">交大網站</a>、<a href="https://wiki.centos.org/Download">官方網站</a></p></li><li><p>第三步：開始安裝centOS<br><code>新增</code><br>→為你的<strong>虛擬主機取名</strong>和<strong>選取存放資料夾</strong>，系統要選<code>Oracle</code>跟小紅帽<code>redhat</code><br>→記憶體大小可以根據需求調整，後續仍然可以增加<br>→<code>立即建立虛擬硬碟</code><br>→選擇<code>VDI(VirtualBox磁碟映像)</code><br>→<code>動態分配</code><br>→<code>啟動</code><br>→選擇下載的CentOS映像檔啟動<br>→畫面按 <strong>↑</strong>選擇<code>Install CentOS 7</code><br>→移出視窗的方法：<strong>右下方</strong>那個閃閃發亮的<strong>Ctrl</strong><br>→選擇安裝語言<br>→選擇<code>安裝目的地</code>，<code>自動配置磁碟分割</code>，左上角完成<br>→<code>開始安裝</code><br>→<code>設定Root密碼</code>(Root是管理員，擁有最高權限，密碼越安全越好)<br>→建一個用戶<code>給予管理員權限</code>(管理員權限建議使用Sudo，不要用root)<br>→VM<code>重新開機</code>後就可以使用了<br>→重新開機回到安裝畫面的話，映像檔沒有退出的關係(上方<code>裝置→光碟機→虛擬磁碟機中移除磁碟</code>→重新開機)</p><p>進到一片黑色畫面顯示localhost login:代表安裝完成啦!<br>輸入使用者帳號後再輸入密碼進行登入</p></li></ul><h3 id="PHP5-6"><a href="#PHP5-6" class="headerlink" title="PHP5.6"></a>PHP5.6</h3><ul><li>第四步：先安裝PHP的環境，這次要安裝的php是5.6版本，我們會需要yum進行輔助，安裝之前我們需要用EPEL跟Remi資料庫來協助我們<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-<span class="hljs-number">7</span>.noarch.rpm<br>yum install http://rpms.remirepo.<span class="hljs-built_in">net</span>/enterprise/remi-release-<span class="hljs-number">7</span>.rpm<br></code></pre></td></tr></table></figure>→接下來，安裝<code>yum-utils</code>，英文說他是 which is an assortment of utilities that integrate，也就是一個聚合體<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">yum-utils<br></code></pre></td></tr></table></figure>→<code>yum-utils</code>最重要的程式之一是<code>yum-config-manager</code>，使用他來啟用Remi作為安裝PHP版本的資料庫(repository)選擇，版本會在最後面進行輸入<br>使用 YUM-UTILS 的 yum-config-manager 啟用 PHP 7.3 的 Remi repository<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd">yum-config-manager --enable remi-php55   [Install PHP <span class="hljs-number">5</span>.<span class="hljs-number">5</span>]<br>yum-config-manager --enable remi-php56   [Install PHP <span class="hljs-number">5</span>.<span class="hljs-number">6</span>]<br>yum-config-manager --enable remi-php72   [Install PHP <span class="hljs-number">7</span>.<span class="hljs-number">2</span>]<br>yum-config-manager --enable remi-php80   [Install PHP <span class="hljs-number">8</span>.<span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure>安裝 PHP<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">yum install php php-mcrypt php-cli php-gd php-curl php-mysql php-ldap php-zip php-fileinfo<br></code></pre></td></tr></table></figure>進行 PHP 版本檢查<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ php -v<br></code></pre></td></tr></table></figure></li></ul><h3 id="mysql-ver15-1-mariaDB安裝"><a href="#mysql-ver15-1-mariaDB安裝" class="headerlink" title="mysql ver15.1 (mariaDB安裝)"></a>mysql ver15.1 (mariaDB安裝)</h3><ul><li>第五步：進行mariaDB的安裝，mariaDB跟MySQL是通用的，但mariaDB是免費開源的程式，所以通常做為預設安裝的樣式。<br>兩種安裝mariadb與mariadb-server套件<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">sudo yum groupinsatll mariadb mariasb-client -y<br></code></pre></td></tr></table></figure>上面是安裝Red Hat Enterprise Linux 7 RH254 Red Hat System Administration III Edition 1 Student Workbook的作法，但有另外一種作法為<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">sudo yum insatll mariadb mariasb-server -y<br></code></pre></td></tr></table></figure></li></ul><p>  接下來也有兩種啟用MariaDB服務的方式<br>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">sudo systemctl <span class="hljs-built_in">start</span> mariafb<br></code></pre></td></tr></table></figure><br>  或是讓MariaDB服務會在每次開機自動啟動<br>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">sudo systemctl enable mariafb<br></code></pre></td></tr></table></figure></p><p>  檢查MariaDB版本<br>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mysql -V<br></code></pre></td></tr></table></figure><br>   記得後面V要是大寫<br>    升級MariaDB<br>      先停用MariaDB的服務：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">systemctl stop mariadb<br></code></pre></td></tr></table></figure><p>移除目前安裝的MariaDB舊版本：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">yum remove mariadb mariadb-server<br></code></pre></td></tr></table></figure><p>安裝新版本的MariaDB：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">yum install mariadb mariadb-server<br></code></pre></td></tr></table></figure><p>啟動自動啟用MariaDB服務：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">systemctl enable mariadb<br></code></pre></td></tr></table></figure><p>升級原有的Database：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mysql_upgrade -u root -p<br></code></pre></td></tr></table></figure><p>重啟MariaDB服務：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">systemctl restart mariadb<br></code></pre></td></tr></table></figure><h3 id="composer安裝"><a href="#composer安裝" class="headerlink" title="composer安裝"></a><a href="https://getcomposer.org/download/">composer安裝</a></h3><p>在VM虛擬機中輸入</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd">php -r &quot;<span class="hljs-built_in">copy</span>(&#x27;https://getcomposer.org/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;<br>php -r &quot;<span class="hljs-keyword">if</span> (hash_file(&#x27;sha384&#x27;, &#x27;composer-setup.php&#x27;) === &#x27;<span class="hljs-number">906</span>a84df04cea2aa72f40b5f787e49f22d4c2f19492ac310e8cba5b96ac8b64115ac402c8cd292b8a03482574915d1a8&#x27;) &#123; <span class="hljs-built_in">echo</span> &#x27;Installer verified&#x27;; &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-built_in">echo</span> &#x27;Installer corrupt&#x27;; unlink(&#x27;composer-setup.php&#x27;); &#125; <span class="hljs-built_in">echo</span> PHP_EOL;&quot;<br>php composer-setup.php<br>php -r &quot;unlink(&#x27;composer-setup.php&#x27;);&quot;<br></code></pre></td></tr></table></figure><p>分別是(翻譯)<br>將安裝程序下載到當前目錄<br>驗證安裝程序 SHA-384，您也可以在此處交叉檢查<br>運行安裝程序<br>刪除安裝程序</p><p>所以刪除安裝程序前進行安裝</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">sudo mv composer.phar /usr/local/bin/composer<br></code></pre></td></tr></table></figure><p>—–延伸閱讀<br><a href="https://shian420.pixnet.net/blog/post/329440572-%E5%BB%BA%E7%AB%8B%E8%99%9B%E6%93%AC%E7%92%B0%E5%A2%83">Windows 7 VirtualBox 安裝</a></p>]]></content>
    
    
    <categories>
      
      <category>虛擬環境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VirtualBox</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ifconfig指令不能用</title>
    <link href="/2021/11/15/ifconfig%E6%8C%87%E4%BB%A4%E4%B8%8D%E8%83%BD%E7%94%A8/"/>
    <url>/2021/11/15/ifconfig%E6%8C%87%E4%BB%A4%E4%B8%8D%E8%83%BD%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux環境安裝"><a href="#Linux環境安裝" class="headerlink" title="Linux環境安裝"></a>Linux環境安裝</h1><p>重頭開始安裝後，發現<code>ifconfig</code></p><p>這指令完全無法使用，於是上網google找資料</p><span id="more"></span><p>起初是因為想要練習虛擬機上面可不可以自己架起一個環境存放資料</p><p>如果可以的話，不像windows的圖形介面多多少少能抵擋一些電腦基礎的使用者開到一些想要加密的檔案或權限不同的檔案</p><p>例如之前待在某個社區，所有的會議資料，預算金額都直接放在桌面上門戶大開，其實現在回想起來真的捏一把冷汗</p><p>再跟著google的大神們指導下，從安裝oracle vm virtualbox</p><p>到安裝PHP版本，mariaDB資料庫，經過了許多波折，還碰到一個目前還沒辦法解決掉的vsftpd的config設定讓FileZilla會530無法連線(網路文章太多不知道哪筆才對)</p><p>這次近來是<code>ifconfig</code>指令不能使用，其實這東西可以用<code>ip addr</code>來找ip</p><p>內文中還有一個wget指令，但目前還不知道作用，所以沒去使用</p><p><code>ifconfig</code>指令不能用的原因是它是附屬於其他套件底下的，要查詢哪個套件的話</p><p>就要輸入指令<code>yum search ifconfig</code>或<code>yum search all ifconfig</code></p><p>除了一些python的東西外你會看到一個叫做net-tools的套件</p><p>這就是你要安裝的東西了，詳細資訊可以在看看這個<a href="https://blog.yowko.com/ifconfig-command-not-found/">參考網站</a></p>]]></content>
    
    
    <categories>
      
      <category>虛擬環境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VirtualBox</tag>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
      <tag>虛擬機</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ssl://mail.u-coder.net:465 Timed Out 錯誤</title>
    <link href="/2021/11/10/ssl-mail-u-coder-net-465-Timed-Out/"/>
    <url>/2021/11/10/ssl-mail-u-coder-net-465-Timed-Out/</url>
    
    <content type="html"><![CDATA[<p>今天花了整個早上的時間在尋找這個錯誤இдஇ<br>一開始因為進來的陣列資料是雙重迴圈要做處理，<br>最後用了乙級考試的方式去拆解他ヾ(･∀･`)</p><span id="more"></span><p>看起來大概是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;id&#x27;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$index</span> =&gt; <span class="hljs-variable">$id</span>)<br>&#123;<br>  <span class="hljs-keyword">foreach</span>(array_keys(<span class="hljs-variable">$_POST</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>)<br>  &#123;<br>    <span class="hljs-variable">$data</span>[<span class="hljs-variable">$key</span>]=<span class="hljs-variable">$_POST</span>[<span class="hljs-variable">$key</span>][<span class="hljs-variable">$index</span>];<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>這樣的方式去設計，讓得到的資料有key跟value<br>說實話我到現在考完試一個月對這段還是很陌生(´⊙ω⊙<code>) 結果我把這段程式碼加進去後</code>dd($data)<code>出來的東西都正確 卻突然送了一個這個東西給我 上網查了很久明明跟我現在做的東西沒有任何關係 但它還是來了( ´•̥̥̥ω•̥̥̥</code> )<br>最後在三四千行的程式碼慢慢篩選之後發現，<br>原來專案程式會success送到一個/Mail的東東去處理<br>註解掉之後就沒問題了ξ( ✿＞◡❛)</p><p>但這問題之後肯定還會碰到，希望之後會對它的原理越來越熟悉<br>網路上查到都是465之類的問題，不太能理解…</p><p>上班真的是問題接踵而來，挫折感滿滿，希望大家都能互相加油(ง๑ •̀_•́)ง</p>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>laravel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VM的ftp很困擾我</title>
    <link href="/2021/11/05/VM%E7%9A%84ftp%E5%BE%88%E5%9B%B0%E6%93%BE%E6%88%91/"/>
    <url>/2021/11/05/VM%E7%9A%84ftp%E5%BE%88%E5%9B%B0%E6%93%BE%E6%88%91/</url>
    
    <content type="html"><![CDATA[<p><a href="https://iter01.com/367794.html">你在找我嗎?</a><br>公司因為專案是利用ftp去做檔案修改的，雖然有討論過git的問題，但似乎因為某些因素git只拿來做版本整合<br>詳細情況也不清楚，總之目前就是從git上面拉下來一個專案，但是因為無法模擬出實際測試過後的結果，所以必須藉由VM的虛擬主機來模擬環境<br>因此又必須要先前一開始進公司的環境測試環節，那部份我卡了很久最後也是靠長官拯救才處理完成，頂多開始了解什麼東西是虛擬主機他是來幹嘛的，但詳細設定還是不會</p><p>廢話到這，<strong>重點</strong>都用這些標示了</p><h3 id="FTP與SFTP設定"><a href="#FTP與SFTP設定" class="headerlink" title="FTP與SFTP設定"></a>FTP與SFTP設定</h3><p>如開頭連結一開始有網址可以查詢設定</p><ul><li>系統Linux的CentOS7環境<h5 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h5></li></ul><ol><li>安裝啟動FTP服務</li></ol><p>1.1 centos<strong>安裝vsftpd</strong>服務</p><p>使用 yum 安裝 vsftpd<br><code>yum install -y vsftpd</code></p><p>1.2啟動vsftpd<br>安裝完成後, <strong>啟動vsftpd</strong>服務 :<br><code>service vsftpd start</code></p><p>啟動後, 可以看到系統已經監聽了 21 埠(Ubuntu下命令為: lsof -i:21)<br><code>netstat -nltp | grep 21</code></p><ol start="2"><li>配置FTP許可權</li></ol><p>2.1 瞭解 vsftpd 配置<br>vsftpd 的配置目錄為 /etc/vsftpd, 包含下列的配置檔案 :<br>        a. vsftpd.conf 為主要配置檔案<br>        b. ftpusers 配置禁止訪問 FTP 伺服器的使用者列表<br>        c. user_list 配置使用者訪問控制</p><p>2.2 阻止匿名訪問和切換根目錄<br>匿名訪問和切換目錄都會給伺服器帶來安全風險, 我們把這兩個功能關閉.<br>編輯 /etc/vsftpd/vsftpd.conf, 找到下面兩處配置並修改:</p><ul><li><p>禁用匿名使用者  YES 改為NO<br>anonymous_enable=NO</p></li><li><p>禁止切換根目錄 刪除或#<br>chroot_local_user=YES</p></li></ul><p>編輯完成後儲存配置, <strong>重新啟動 FTP</strong> 服務<br><code>service vsftpd restart</code></p><p>2.3 建立 FTP 使用者</p><p><strong>建立</strong>一個使用者 ftpuser<br><code>useradd ftpuser</code></p><p>為使用者 ftpuser <strong>設定密碼</strong><br><code>passwd ftpuser</code>  或  echo “new_password” | passwd ftpuser –stdin</p><p>2.4 限制該使用者僅能通過FTP訪問</p><p>限制使用者 ftpuser 只能通過 FTP 訪問伺服器, 而不能直接登入伺服器</p><p>usermod -s /sbin/nologin ftpuser</p><p>2.5 為使用者分配主目錄</p><p>為使用者 ftpuser建立主目錄並約定<br>/data/ftp 為主目錄, 該目錄不可上傳檔案<br>/data/ftp/pub 檔案只能上傳到該目錄下<br>在/data中建立相關的目錄<br>mkdir -p /data/ftp/pub</p><p><strong>設定訪問許可權</strong><br><code>chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</code></p><p><strong>設定為使用者的主目錄</strong><br><code>usermod -d /data/ftp ftpuser</code></p><p>3、OK</p><p>至此, FTP服務已經搭建完成, 可以使用各種第三方客戶端來測試訪問FTP伺服器<br>訪問前, 記得<strong>關閉防火牆</strong><br><code>service firewalld stop</code></p><p><del>如果需要使用root登入連線FTP服務, 需要配置 /etc/vsftpd/user_list 和 /etc/vsftpd/ftpusers, 將檔案中的root註釋</del></p><p>之後的重點就是開機 <code>service firewalld stop</code> 跟 <code>service vsftpd start</code> 兩個記得使用就好</p><p>目前仍然出現的問題還在研究…</p><ul><li><input disabled="" type="checkbox"> 1.VM開機自動啟動vsftpd 的server</li><li><input disabled="" type="checkbox"> 2.針對80 port或是特定的port做指定開啟或關閉</li><li><input checked="" disabled="" type="checkbox"> 3.vsftpd config產生的530登入錯誤問題</li></ul><p>希望之後能趕快把這一塊更新完成再補上完整的東西( ´•̥̥̥ω•̥̥̥` ) </p><hr><p>2021.11.22 上網找到一個<a href="https://iter01.com/557032.html">方法一</a>去解決<code>回應: 530 Login incorrect.</code>的問題<br>針對<code>/etc/pam.b/vsftpd</code>進行<code>vim</code>修改，將<code>auth required pam_shells.so</code>跟<code>auth include password-auth</code>進行註解</p><p>還有一個<a href="https://www.twblogs.net/a/5d074c4dbd9eee1ede039a0a">方法二</a>是將<code>auth required pam_shells.so</code>改成<code>auth required pam_nologin.so</code></p><p>這是目前解決的兩種方法，但利用網路磁碟機的方法的時候，他一樣會沒辦法連線到….所以肯定還有另外的解決方式才對</p><p>問了其他學長，也有提供sftp登入就不會有這個問題的用法，可能等以後再試試看…<br>雖然搞不懂原因，但至少成功可以將檔案呈現在FileZilla了</p><hr><p>—上工了待續…</p>]]></content>
    
    
    <categories>
      
      <category>虛擬環境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>530</tag>
      
      <tag>VirtualBox</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown語法</title>
    <link href="/2021/11/03/markdown%E8%AA%9E%E6%B3%95/"/>
    <url>/2021/11/03/markdown%E8%AA%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>到目前為止都還是對這東西懵懵懂懂，因為之前上課(3月22)的時候都是接觸<a href="https://www.youtube.com/watch?v=lo1nhg1Jmfc">簡簡單單</a>的<a href="https://www.notion.so/zh-tw">notion</a>，直到看到了<a href="https://www.facebook.com/story.php?story_fbid=3199157170094892&id=100000019222295">這個</a>跟<a href="https://www.facebook.com/groups/notion.so.taiwan/permalink/652369225314224/">這個</a>。<br>簡單來說就是隱私權條款被改掉了</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">Business </span>Development <span class="hljs-keyword">and </span>Strategic Partnerships: We may collect personal information from individuals <span class="hljs-keyword">and </span>third parties to assess <span class="hljs-keyword">and </span>pursue potential <span class="hljs-keyword">business </span>opportunities.<br></code></pre></td></tr></table></figure><p>這個現在找不到了，相關提供個資給第三方的說法現在都改成「基於提供服務的目的（或使用者有要求的事項為前題），將使用必要資訊或提供必要資訊給第三方」<br>之後我就怕的叫躲在角落發抖。<br><img src="https://voicettank.org/wp-content/uploads/2021/03/c31f16_0a4e5db16b1b4bff9a86503cc1e5e638-mv2.jpg"></p><p>直到最近考完考試開始工作之後，發現程式這東西不做筆記真的不行，昨天寫的程式可能你今天就忘了，光那個<code>#</code> <code>//</code> <code>&lt;-- --&gt;</code> <code>&#123;&#123;-- --&#125;&#125;</code>等等的東西大概看就知道噢~~~這用在哪邊，比一般的程式碼還會分辨哪個語法用什麼</p><p>離題了…</p><p>今天要講的就是<a href="https://hackmd.io/@wootu/SkY0M5wsZ?type=view">markdown語法</a><br>上面連結的大大講的非常清楚哪些地方用在哪裡<br>像是之前都沒試著用過的<code>![]()</code>去塞圖片，還有<code>&gt;</code>的引用之類的，上面都有寫<br>那我就不多作介紹，自己點<a href="https://hackmd.io/@wootu/SkY0M5wsZ?type=view">連結</a>幫忙衝個人氣去看吧</p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>notion</tag>
      
      <tag>Hexo使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo - fluid主題</title>
    <link href="/2021/11/03/fluid%E4%B8%BB%E9%A1%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/11/03/fluid%E4%B8%BB%E9%A1%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>這東西真的搞得我快瘋掉<br>每次弄這個都失敗，前前後後重新安裝了大概10來次，補上新的東西他就給你跳故障，弄得自己頭超痛</p><p>不過！就在今天！終於發現自己錯誤的一個點，特別來記錄一下<br><img src="https://memeprod.ap-south-1.linodeobjects.com/user-gif/53629eede0fb322983836d87096661ac.gif"></p><h1 id="fluid主題使用"><a href="#fluid主題使用" class="headerlink" title="fluid主題使用"></a>fluid主題使用</h1><p>其實到目前為止都還在熟悉中，雖然是全中文主題但是根本看不懂他到底在寫什麼阿阿阿！(吶喊)<br>我只是想要好好地寫一個文章記錄我的文章，結果碰到這個真的是關關難過但關關不說。<br>所以這邊有<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">中文參考網站</a></p><p><strong>注意</strong> 如果再開啟hexo server狀態下執行hexo clean會導致整個檔案的public都被清除！hexo會把整個public資料夾當作已產生的靜態檔案給清除。<br><a href="https://s81679.github.io/2020/02/25/hexo-theme-fluid/">前人痛苦經歷</a></p><h4 id="錯誤事項注意"><a href="#錯誤事項注意" class="headerlink" title="錯誤事項注意"></a>錯誤事項注意</h4><ul><li><a href="https://fluid-dev.github.io/hexo-fluid-docs/start/#%E6%90%AD%E5%BB%BA-hexo-%E5%8D%9A%E5%AE%A2">官方文件</a></li></ul><blockquote><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：<br><code>npm install --save hexo-theme-fluid</code><br>然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml (opens new window)内容复制过去。</p></blockquote><p>每次看到這段的時候就會直些下意識的把資料夾下方的_config複製一遍然後改檔名，而簡體文獻中 <strong>主題</strong> 跟 <strong>博客</strong> <del>可不可以寫得好分辨一點</del>這兩個位置真的很容易讓人搞錯<br>所以如果你用路徑安裝的話，實際位置會在 <code>hexo目錄/node_modules/hexo-theme-fluid/_config.yml</code><br>這才會是他這段說要的東西<br>真的是一步錯步步錯，這東西從我練乙級前(9月)到現在(11月)才搞懂，終於在我快放棄這個主題的時候，開始我的hexo建置了(汗顏)</p><h4 id="重建"><a href="#重建" class="headerlink" title="重建"></a>重建</h4><p>hexo既然重建那麼多次了。<br>肯定知道，如果要移植的時候<code>source</code>這個資料夾<strong>裡面的東西</strong>記得<strong>全部</strong>複製起來。<br>他會是你重頭到尾嘔心瀝血所創作出來的所有文章，如果你忘記備份並且他沒事自動上傳到git做紀錄，那你也只能節哀順變了…</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fluid</tag>
      
      <tag>Hexo使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基礎hexo使用，架設</title>
    <link href="/2021/10/03/hexo%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%9E%B6%E8%A8%AD/"/>
    <url>/2021/10/03/hexo%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%9E%B6%E8%A8%AD/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a><a href="https://hexo.io/zh-tw/docs/">Quick Start</a></h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h3 id="Setting-設定，設定，設定。"><a href="#Setting-設定，設定，設定。" class="headerlink" title="Setting 設定，設定，設定。"></a>Setting 設定，設定，設定。</h3><p>最外層<code>_config.yml</code>會是你需要修改有關主題、git、語言、網站標題內容等等的地方，他會是一個類似全域的東西去修改很整個網站的東西，所以不要亂加一些有得沒得不然可能會跟我一樣進得去出不來，發不了大財。</p><h3 id="Create-a-new-post-創造一個全新的！！！！！-文章？"><a href="#Create-a-new-post-創造一個全新的！！！！！-文章？" class="headerlink" title="Create a new post 創造一個全新的！！！！！　　　　文章？"></a>Create a new post 創造一個全新的！！！！！　　　　文章？</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ hexo new &quot;My New Post&quot;<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="ready-to-run-server-產生server前該做的事情"><a href="#ready-to-run-server-產生server前該做的事情" class="headerlink" title="ready to run server 產生server前該做的事情"></a>ready to run server 產生server前該做的事情</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ hexo g -debug<br></code></pre></td></tr></table></figure><h6 id="Generate-static-files-跨博，產生靜態檔案的意思"><a href="#Generate-static-files-跨博，產生靜態檔案的意思" class="headerlink" title="Generate static files 跨博，產生靜態檔案的意思"></a>Generate static files 跨博，產生靜態檔案的意思</h6><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ hexo generate<br></code></pre></td></tr></table></figure><ul><li>一段hexo都可以互相組合，底下是常用組合內容</li></ul><table><thead><tr><th>選項</th><th>描述</th></tr></thead><tbody><tr><td><code>-d</code>,<code>--deploy</code></td><td>產生完成即部屬網站</td></tr><tr><td><code>-w</code>,<code>--watch</code></td><td>監看檔案變更</td></tr><tr><td><code>--debug</code></td><td>除錯模式</td></tr></tbody></table><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h6 id="Deploy-to-remote-sites-部屬網站…dase-其實跟上面可以一起組合用"><a href="#Deploy-to-remote-sites-部屬網站…dase-其實跟上面可以一起組合用" class="headerlink" title="Deploy to remote sites 部屬網站…dase?其實跟上面可以一起組合用"></a>Deploy to remote sites 部屬網站…dase?其實跟上面可以一起組合用</h6><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ hexo deploy<br></code></pre></td></tr></table></figure><table><thead><tr><th>選項</th><th>描述</th></tr></thead><tbody><tr><td><code>-g</code>,<code>--generate</code></td><td>部屬網站前先產生靜態檔案</td></tr></tbody></table><h3 id="Run-server-模擬server"><a href="#Run-server-模擬server" class="headerlink" title="Run server 模擬server"></a>Run server 模擬server</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>摸應佛:<a href="https://hexo.io/zh-tw/docs/commands">中文指令</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHPnote</title>
    <link href="/2021/10/02/PHPnote/"/>
    <url>/2021/10/02/PHPnote/</url>
    
    <content type="html"><![CDATA[<p>P…..<br>開始打了之後發現，好像也沒什麼好打的。</p><span id="more"></span><p>看自己以前的筆記都覺得太初階放上來會被笑… :disappointed_relieved:</p><p>基礎學完之後，之後問題大多數都落在<br>array_walk、array_map、array_combine、mysqli_num_field這種之前沒在用的涵式做學習<br>怎麼去理解、使用他，會在哪些地方做比較好的應用<br>多重迴圈的掌握，簡短效能的方法，演算法的調整<br>然後整理出自己需要的資料格式</p><p>光這些動作不熟悉就可以花掉一整天的時間。但是快的話可能邏輯清晰幾分鐘就好了<br>這部份大概也是目前需要努力熟悉的部份吧…</p>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
